{
  "comments": [
    {
      "key": {
        "uuid": "fa57193c_0de30c34",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/site/asciidoc/shard-raft-behavior.adoc",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 649
      },
      "writtenOn": "2016-05-17T15:12:33Z",
      "side": 1,
      "message": "I do not believe Shard needs to be a PersistentActor, as all its persistence should be handled by RaftActor.",
      "range": {
        "startLine": 41,
        "startChar": 64,
        "endLine": 41,
        "endChar": 86
      },
      "revId": "2aa70cbf2c007b7256f70952bf5e8e55171952ab",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa57193c_cfc5763d",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/site/asciidoc/shard-raft-behavior.adoc",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 4930
      },
      "writtenOn": "2016-05-22T05:23:28Z",
      "side": 1,
      "message": "Yeah that can be done. But I feel the snapshotting of the state and persisting it should be the state machine\u0027s (shard) responsibility. Maybe a snapshot init-finish window can help raft know about it. So maybe we will need shard actor to be persistent.",
      "parentUuid": "fa57193c_0de30c34",
      "range": {
        "startLine": 41,
        "startChar": 64,
        "endLine": 41,
        "endChar": 86
      },
      "revId": "2aa70cbf2c007b7256f70952bf5e8e55171952ab",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba51214e_1bd55f43",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/site/asciidoc/shard-raft-behavior.adoc",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1842
      },
      "writtenOn": "2016-06-13T06:19:32Z",
      "side": 1,
      "message": "No - snapshotting is part of raft.",
      "parentUuid": "fa57193c_cfc5763d",
      "range": {
        "startLine": 41,
        "startChar": 64,
        "endLine": 41,
        "endChar": 86
      },
      "revId": "2aa70cbf2c007b7256f70952bf5e8e55171952ab",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba51214e_2edbb81c",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/site/asciidoc/shard-raft-behavior.adoc",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 649
      },
      "writtenOn": "2016-06-14T18:14:39Z",
      "side": 1,
      "message": "Actually RaftActor needs to request a snapshot and Shard should reply with a complete snapshot. The reason for this is that the snapshot needs to contain a point-in-time consistent view of multiple things:\n- the data tree\n- last committed transaction ID for each alive chain\n- tombstones for freestanding transactions which have not been acked by frontend\n- the schema context\n\nand all of this information needs to be replicated to followers via RAFT. First piece is obvious, second and third are needed to resync state with frontends, the third one is needed for recovery (in the future).",
      "parentUuid": "ba51214e_1bd55f43",
      "range": {
        "startLine": 41,
        "startChar": 64,
        "endLine": 41,
        "endChar": 86
      },
      "revId": "2aa70cbf2c007b7256f70952bf5e8e55171952ab",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba51214e_0a685db9",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/site/asciidoc/shard-raft-behavior.adoc",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1842
      },
      "writtenOn": "2016-06-17T00:41:57Z",
      "side": 1,
      "message": "\"Actually RaftActor needs to request a snapshot and Shard should reply with a complete snapshot.\" - correct, that\u0027s what it does now, although the Shard snapshot data currently only contains the serialized data tree. RaftActor also adds its point-in-time state to the resulting snapshot, i.e. election term info and server config (peers and voting states).\n\nSnapshotting is a raft concept, an optional part of raft. Also snapshots go hand in hand with the journal both in memory and with akka persistence.",
      "parentUuid": "ba51214e_2edbb81c",
      "range": {
        "startLine": 41,
        "startChar": 64,
        "endLine": 41,
        "endChar": 86
      },
      "revId": "2aa70cbf2c007b7256f70952bf5e8e55171952ab",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}