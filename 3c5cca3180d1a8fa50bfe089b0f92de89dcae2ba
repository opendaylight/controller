{
  "comments": [
    {
      "key": {
        "uuid": "5aaae553_478885e7",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/cluster/datastore/node/utils/stream/NormalizedNodeInputStreamReader.java",
        "patchSetId": 3
      },
      "lineNbr": 101,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-11-30T19:16:09Z",
      "side": 1,
      "message": "I don\u0027t think we should fail fast here. The main() point of the versioning was to be able to handle older versions in a backward compatible way. So if we changed something that required a version bump, we can still appropriately handle an older version stream at the point where the code changed.",
      "revId": "3c5cca3180d1a8fa50bfe089b0f92de89dcae2ba",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aaae553_3d4b035b",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/cluster/datastore/node/utils/stream/NormalizedNodeInputStreamReader.java",
        "patchSetId": 3
      },
      "lineNbr": 101,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-12-05T09:46:26Z",
      "side": 1,
      "message": "Right, and that\u0027s something I plan in a follow up (to handle QNames as another dictionary). But if we ignore the version altogether if we encounter a corrupted stream or a newer version we\u0027ll happily assume it\u0027s version 1, which could lead to us doing the wrong thing (for example if the stream happens to parse, but under the new version the semantics are different).",
      "parentUuid": "5aaae553_478885e7",
      "revId": "3c5cca3180d1a8fa50bfe089b0f92de89dcae2ba",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa7f18b_6a1793a4",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/cluster/datastore/node/utils/stream/NormalizedNodeInputStreamReader.java",
        "patchSetId": 3
      },
      "lineNbr": 101,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-07T13:37:44Z",
      "side": 1,
      "message": "We at least need to handle backwards compatibility, i.e. reading an older version from persistence, which this check will break. If it\u0027s a newer version we can error out. However in that case, the caller should fall back to the older version semantics and send the older version.",
      "parentUuid": "5aaae553_3d4b035b",
      "revId": "3c5cca3180d1a8fa50bfe089b0f92de89dcae2ba",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}