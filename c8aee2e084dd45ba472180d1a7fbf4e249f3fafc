{
  "comments": [
    {
      "key": {
        "uuid": "ba8cc1f7_5ead9030",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/TransactionChainProxy.java",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-11-06T01:48:39Z",
      "side": 1,
      "message": "I\u0027m not able to come up with a scenario in which the second condition could be true. Could you please elaborate?",
      "revId": "c8aee2e084dd45ba472180d1a7fbf4e249f3fafc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_be4a9c81",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/TransactionChainProxy.java",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-11-06T02:04:19Z",
      "side": 1,
      "message": "It actually happens in the unit test I added. \n\n- The first TransactionProxy is created and the client calls put. \n\n- The TransactionProxy attempts to create the shard Tx. However it first calls the manager to get the primary shard. This is done async. \n\n- The client calls ready and we cache the ready future here. \n\n- Then the FindPrimaryShard call completes and sendCreateTransaction is called. However the cached ready futures were from the ready on this TransactionProxy. If we tried to wait on it, it would cause a form of deadlock (this happened on the first run of the unit test). Hence the Tx ID check.",
      "parentUuid": "ba8cc1f7_5ead9030",
      "revId": "c8aee2e084dd45ba472180d1a7fbf4e249f3fafc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_de368003",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/TransactionChainProxy.java",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-11-06T02:42:21Z",
      "side": 1,
      "message": "Makes sense. I just hope we don\u0027t get confused about this later.",
      "parentUuid": "ba8cc1f7_be4a9c81",
      "revId": "c8aee2e084dd45ba472180d1a7fbf4e249f3fafc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_3e0c4c42",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/TransactionChainProxy.java",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-11-06T03:32:16Z",
      "side": 1,
      "message": "That\u0027s why I added comments above. Maybe they\u0027re not clear enough?",
      "parentUuid": "ba8cc1f7_de368003",
      "revId": "c8aee2e084dd45ba472180d1a7fbf4e249f3fafc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_1e038810",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/TransactionChainProxy.java",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-11-06T04:04:00Z",
      "side": 1,
      "message": "Maybe we should document the scenario in the comments as you explained it. The ideal thing would be to simplify the code. Don\u0027t have suggestions for improvement right now though. I\u0027ll need to think a bit more.",
      "parentUuid": "ba8cc1f7_3e0c4c42",
      "revId": "c8aee2e084dd45ba472180d1a7fbf4e249f3fafc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}