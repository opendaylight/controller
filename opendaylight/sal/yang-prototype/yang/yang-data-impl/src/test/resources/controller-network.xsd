<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:yin="urn:ietf:params:xml:schema:yang:yin:1"
           targetNamespace="urn:opendaylight:controller:network"
           xmlns="urn:opendaylight:controller:network"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified"
           version="2013-05-20"
           xml:lang="en"
           xmlns:topos="urn:opendaylight:controller:network"
           xmlns:inet="urn:ietf:params:xml:ns:yang:ietf-inet-types">

  <xs:import namespace="urn:ietf:params:xml:ns:yang:ietf-inet-types"
             schemaLocation="ietf-inet-types@2010-09-24.xsd"/>

  <xs:annotation>
    <xs:documentation>
      This schema was generated from the YANG module controller-network
      by pyang version 1.2.

      The schema describes an instance document consisting
      of the entire configuration data store, operational
      data, rpc operations, and notifications.
      This schema can thus NOT be used as-is to
      validate NETCONF PDUs.
    </xs:documentation>
  </xs:annotation>


  <!-- YANG typedefs -->
  <xs:simpleType name="topology-id">
    <xs:restriction base="xs:string">
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="node-id">
    <xs:restriction base="xs:string">
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="link-id">
    <xs:restriction base="xs:string">
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tp-id">
    <xs:annotation>
      <xs:documentation>
        identifier for termination points on a port
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tp-ref">
    <xs:restriction base="tp-id">
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="topology-ref">
    <xs:annotation>
      <xs:documentation>
        This type is used for leafs that reference topology identifier instance.
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="topology-id">
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="node-ref">
    <xs:annotation>
      <xs:documentation>
        This type is used for leafs that reference a node instance.
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="node-id">
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="link-ref">
    <xs:annotation>
      <xs:documentation>
        This type is used for leafs that reference a link instance.
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="link-id">
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="network-element-ref">
    <xs:restriction base="element-id">
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="element-id">
    <xs:restriction base="xs:string">
    </xs:restriction>
  </xs:simpleType>

  <xs:element name="network">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="topologies" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="topology" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>

                    This is the model of abstract topology which contains only Network
                    Nodes and Network Links. Each topology MUST be identified by
                    unique topology-id for reason that the store could contain many
                    topologies.

                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="topology-id"  type="topology-id">
                      <xs:annotation>
                        <xs:documentation>

                          It is presumed that datastore will contain many topologies. To
                          distinguish between topologies it is vital to have UNIQUE
                          topology identifier.

                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="types" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>

                          The container for definition of topology types.
                          The augmenting modules should add empty optional leaf 
                          to this container to signalize topology type.

                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:any minOccurs="0" maxOccurs="unbounded"
                                  namespace="##other" processContents="lax"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="nodes" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="node" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>
                                The list of network nodes defined for topology.
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="node-id"  type="node-id">
                                  <xs:annotation>
                                    <xs:documentation>
                                      The Topology identifier of network-node.
                                    </xs:documentation>
                                  </xs:annotation>
                                </xs:element>
                                <xs:element name="supporting-ne" minOccurs="0"  type="network-element-ref">
                                </xs:element>
                                <xs:element name="termination-points" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="termination-point" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="tp-id"  type="tp-id">
                                            </xs:element>
                                            <xs:any minOccurs="0" maxOccurs="unbounded"
                                                    namespace="##other" processContents="lax"/>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:any minOccurs="0" maxOccurs="unbounded"
                                              namespace="##other" processContents="lax"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                  <xs:key name="key_termination-points_node_nodes_topology_topologies_network_termination-point">
                                    <xs:selector xpath="topos:termination-point"/>
                                    <xs:field xpath="topos:tp-id"/>
                                  </xs:key>
                                </xs:element>
                                <xs:any minOccurs="0" maxOccurs="unbounded"
                                        namespace="##other" processContents="lax"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:any minOccurs="0" maxOccurs="unbounded"
                                  namespace="##other" processContents="lax"/>
                        </xs:sequence>
                      </xs:complexType>
                      <xs:key name="key_nodes_topology_topologies_network_node">
                        <xs:selector xpath="topos:node"/>
                        <xs:field xpath="topos:node-id"/>
                      </xs:key>
                    </xs:element>
                    <xs:element name="links" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="link" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>

                                The Network Link which is defined by Local (Source) and
                                Remote (Destination) Network Nodes. Every link MUST be
                                defined either by identifier and his local and remote
                                Network Nodes (in real applications it is common that many
                                links are originated from one node and end up in same
                                remote node). To ensure that we would always know to
                                distinguish between links, every link SHOULD have
                                identifier.

                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="link-id"  type="link-id">
                                </xs:element>
                                <xs:element name="source" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="source-node" minOccurs="0"  type="node-ref">
                                        <xs:annotation>
                                          <xs:documentation>
                                            Source node identifier.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:element>
                                      <xs:element name="source-tp" minOccurs="0"  type="tp-ref">
                                      </xs:element>
                                      <xs:any minOccurs="0" maxOccurs="unbounded"
                                              namespace="##other" processContents="lax"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="destination" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="dest-node" minOccurs="0"  type="node-ref">
                                        <xs:annotation>
                                          <xs:documentation>
                                            Destination node identifier.
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:element>
                                      <xs:element name="dest-tp" minOccurs="0"  type="tp-ref">
                                      </xs:element>
                                      <xs:any minOccurs="0" maxOccurs="unbounded"
                                              namespace="##other" processContents="lax"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:any minOccurs="0" maxOccurs="unbounded"
                                        namespace="##other" processContents="lax"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:any minOccurs="0" maxOccurs="unbounded"
                                  namespace="##other" processContents="lax"/>
                        </xs:sequence>
                      </xs:complexType>
                      <xs:key name="key_links_topology_topologies_network_link">
                        <xs:selector xpath="topos:link"/>
                        <xs:field xpath="topos:link-id"/>
                      </xs:key>
                    </xs:element>
                    <xs:any minOccurs="0" maxOccurs="unbounded"
                            namespace="##other" processContents="lax"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:any minOccurs="0" maxOccurs="unbounded"
                      namespace="##other" processContents="lax"/>
            </xs:sequence>
          </xs:complexType>
          <xs:key name="key_topologies_network_topology">
            <xs:selector xpath="topos:topology"/>
            <xs:field xpath="topos:topology-id"/>
          </xs:key>
        </xs:element>
        <xs:element name="network-elements" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="network-element" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="element-id"  type="element-id">
                    </xs:element>
                    <xs:any minOccurs="0" maxOccurs="unbounded"
                            namespace="##other" processContents="lax"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:any minOccurs="0" maxOccurs="unbounded"
                      namespace="##other" processContents="lax"/>
            </xs:sequence>
          </xs:complexType>
          <xs:key name="key_network-elements_network_network-element">
            <xs:selector xpath="topos:network-element"/>
            <xs:field xpath="topos:element-id"/>
          </xs:key>
        </xs:element>
        <xs:any minOccurs="0" maxOccurs="unbounded"
                namespace="##other" processContents="lax"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

</xs:schema>
