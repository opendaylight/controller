{
  "apiVersion": "1.0.0",
  "swaggerVersion": "1.2",
  "basePath": "/api",
  "resourcePath": "/toaster",
  "produces": [
    "application/json",
    "application/xml",
    "text/plain",
    "text/html"
  ],
  "apis": [
    {
      "path": "/toaster",
      "operations": [
        {
          "method": "POST",
          "summary": "Add a new toaster",
          "notes": "",
          "type": "void",
          "nickname": "add toaster",
          "consumes": [
            "application/json",
            "application/xml"
          ],          
          "parameters": [
            {
              "name": "body",
              "description": "Pet object that needs to be added to the store",
              "required": true,
              "type": "Toaster",
              "paramType": "body"
            }
          ],
          "responseMessages": [
            {
              "code": 405,
              "message": "Invalid input"
            }
          ]
        }
      ]
     },
    {
      "path": "/toaster",
      "operations": [
        {
          "method": "GET",
          "summary": "Add a new toaster",
          "notes": "",
          "type": "Toaster",
          "nickname": "Get toaster",
          "consumes": [
            "application/json",
            "application/xml"
          ],          
          "responseMessages": [
            {
              "code": 405,
              "message": "Invalid input"
            }
          ]
        }
      ]
     },
	{
	    "path" : "operations/toaster/cancel-toast",
	    "operations" : [ {
	      "method" : "POST",
	      "summary" : null,
	      "notes" : "Stop making toast, if any is being made.\n           A 'resource-denied' error will be returned \n           if the toaster service is disabled.",
	      "type" : null,
	      "nickname" : "cancel-toast",
	      "consumes" : null,
	      "parameters" : null,
	      "responseMessages" : null
	    } ]
	  }, {
	    "path" : "operations/toaster/make-toast",
	    "operations" : [ {
	      "method" : "POST",
	      "summary" : null,
	      "notes" : "Make some toast.\n           The toastDone notification will be sent when \n           the toast is finished.\n           An 'in-use' error will be returned if toast\n           is already being made.\n           A 'resource-denied' error will be returned \n           if the toaster service is disabled.",
	      "type" : null,
	      "nickname" : "make-toast",
	      "consumes" : null,
	      "parameters" : null,
	      "responseMessages" : null
	    } ]
	  }
  ],
  "models": {
    "Toaster": {
    "id":"Toaster",
		"$schema": "http://json-schema.org/draft-04/schema",
	  "description": "Top-level container for all toaster database objects.",
	  "properties": {
	    "allow-user": {
	      "description": "A list of user name patterns to allow",
	      "items": {"type": "string"},
	      "required": false,
	      "type": "array"
	    },
		 "how": {
	      "oneOf": [
	        {
	          "manual": {"manual": {
	            "required": false,
	            "type": "string"
	          }},
	          "type": "object"
	        },
	        {
	          "interval": {"interval": {
	            "required": false,
	            "type": "integer"
	          }},
	          "type": "object"
	        },
	        {
	          "daily": {
	            "daily": {
	              "required": false,
	              "type": "string"
	            },
	            "time-of-day": {
	              "required": false,
	              "type": "string"
	            }
	          },
	          "type": "object"
	        }
	      ],
	      "type": "object"
	    },
	    "testToasterBits": {
	      "enum": [
	        "testbit1",
	        "testbit2"
	      ],
	      "minItems": 0,
	      "required": false,
	      "type": "String",
	      "uniqueItems": true
	    },
	    "toasterManufacturer": {
	      "description": "The name of the toaster's manufacturer. For instance, \n                Microsoft Toaster.",
	      "required": true,
	      "type": "string"
	    },
	    "toasterModelNumber": {
	      "description": "The name of the toaster's model. For instance,\n               Radiant Automatic.",
	      "required": true,
	      "type": "string"
	    },
	    "toasterStatus": {
	      "description": "This variable indicates the current state of \n               the toaster.",
	      "enum": [
	        "up",
	        "down"
	      ],
	      "required": true
	    }
	  }     
    }
  }
}
