<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:odl="http://opendaylight.org/xmlns/blueprint/v1.0.0">

  <reference id="classLoadingStrategy" interface="org.opendaylight.mdsal.binding.generator.api.ClassLoadingStrategy" />
  <reference id="schemaService" interface="org.opendaylight.mdsal.dom.api.DOMSchemaService" />
  <reference id="domRpcService" interface="org.opendaylight.controller.md.sal.dom.api.DOMRpcService"/>
  <reference id="domRpcRegistry" interface="org.opendaylight.controller.md.sal.dom.api.DOMRpcProviderService"/>
  <reference id="domMountPointService" interface="org.opendaylight.controller.md.sal.dom.api.DOMMountPointService"/>
  <reference id="domNotificationService" interface="org.opendaylight.controller.md.sal.dom.api.DOMNotificationService"/>
  <reference id="domNotificationPublishService" interface="org.opendaylight.controller.md.sal.dom.api.DOMNotificationPublishService"/>
  <reference id="domNotificationListenerRegistry" interface="org.opendaylight.controller.md.sal.dom.spi.DOMNotificationSubscriptionListenerRegistry"/>
  <reference id="domDefaultDataBroker" interface="org.opendaylight.controller.md.sal.dom.api.DOMDataBroker"
          odl:type="default"/>
  <reference id="domPingPongDataBroker" interface="org.opendaylight.controller.md.sal.dom.api.DOMDataBroker"
          odl:type="pingpong"/>

  <bean id="wiring" class="org.opendaylight.controller.md.sal.binding.impl.BindingBrokerWiring">
    <argument ref="classLoadingStrategy"/>
    <argument ref="schemaService"/>
    <argument ref="domRpcService"/>
    <argument ref="domRpcRegistry"/>
    <argument ref="domMountPointService"/>
    <argument ref="domNotificationService"/>
    <argument ref="domNotificationPublishService"/>
    <argument ref="domNotificationListenerRegistry"/>
    <argument ref="domDefaultDataBroker"/>
    <argument ref="domPingPongDataBroker"/>
  </bean>

  <!-- Runtime binding/normalized mapping service -->

  <bean id="mappingCodec" factory-ref="wiring" factory-method="getBindingToNormalizedNodeCodec" />

  <service ref="mappingCodec" odl:type="default">
    <interfaces>
      <value>org.opendaylight.mdsal.binding.dom.codec.api.BindingNormalizedNodeSerializer</value>
      <value>org.opendaylight.mdsal.binding.dom.codec.api.BindingCodecTreeFactory</value>
    </interfaces>
  </service>

  <!-- TODO: remove this service as it is referring to a class. To do that we need to migrate everyone over to 'factory' -->
  <service id="codec" ref="mappingCodec" interface="org.opendaylight.controller.md.sal.binding.impl.BindingToNormalizedNodeCodec"/>

  <!-- Adapter service -->
  <bean id="adapterFactory" factory-ref="wiring" factory-method="getAdapterFactory" />

  <service id="factory" ref="adapterFactory">
    <interfaces>
      <value>org.opendaylight.controller.md.sal.binding.spi.AdapterFactory</value>
    </interfaces>
  </service>

  <!-- Binding RPC Registry Service -->

  <bean id="bindingRpcRegistry" factory-ref="wiring" factory-method="getRpcProviderRegistry" />

  <service ref="bindingRpcRegistry" interface="org.opendaylight.controller.sal.binding.api.RpcProviderRegistry"
          odl:type="default"/>

  <!-- Binding MountPoint Service -->

  <bean id="bindingMountPointService" factory-ref="wiring" factory-method="getMountPointService" />

  <service ref="bindingMountPointService" interface="org.opendaylight.controller.md.sal.binding.api.MountPointService"
          odl:type="default"/>

  <!-- Binding Notification Service -->

  <bean id="bindingNotificationServiceAdapter" factory-ref="wiring" factory-method="getNotificationService" />
  <service ref="bindingNotificationServiceAdapter" interface="org.opendaylight.controller.md.sal.binding.api.NotificationService"
          odl:type="default"/>

  <bean id="bindingNotificationPublishAdapter" factory-ref="wiring" factory-method="getNotificationPublishService" />
  <service ref="bindingNotificationPublishAdapter" interface="org.opendaylight.controller.md.sal.binding.api.NotificationPublishService"
          odl:type="default"/>

  <bean id="notificationProviderService" factory-ref="wiring" factory-method="getNotificationProviderService" />
  <service ref="notificationProviderService" interface="org.opendaylight.controller.sal.binding.api.NotificationProviderService" odl:type="default" />

  <bean id="deprecatedNotificationService" factory-ref="wiring" factory-method="getNotificationProviderService" />
  <service ref="deprecatedNotificationService" interface="org.opendaylight.controller.sal.binding.api.NotificationService" odl:type="default" />

  <!-- Binding DataBroker -->

  <bean id="bindingDataBroker" factory-ref="wiring" factory-method="getDataBroker" />

  <service ref="bindingDataBroker" interface="org.opendaylight.controller.md.sal.binding.api.DataBroker"
          odl:type="default"/>

  <!-- Binding PingPong DataBroker -->

  <bean id="bindingPingPongDataBroker" factory-ref="wiring" factory-method="getPingPongDataBroker" />

  <service ref="bindingPingPongDataBroker" interface="org.opendaylight.controller.md.sal.binding.api.DataBroker"
          odl:type="pingpong"/>

  <!-- Legacy BindingAwareBroker -->

  <bean id="bindingNotificationProviderService" class="org.opendaylight.controller.md.sal.binding.compat.HeliumNotificationProviderServiceWithInterestListeners">
    <argument ref="bindingNotificationPublishAdapter"/>
    <argument ref="bindingNotificationServiceAdapter"/>
    <argument ref="domNotificationListenerRegistry"/>
  </bean>

  <bean id="bindingAwareBroker" class="org.opendaylight.controller.sal.binding.impl.RootBindingAwareBroker"
      init-method="start" destroy-method="close">
    <argument value="deprecated-BindingAwareBroker"/>
    <property name="dataBroker" ref="bindingDataBroker"/>
    <property name="mountService" ref="bindingMountPointService"/>
    <property name="rpcBroker" ref="bindingRpcRegistry"/>
    <property name="notificationBroker" ref="bindingNotificationProviderService"/>
    <property name="notificationPublishService" ref="bindingNotificationPublishAdapter"/>
  </bean>

  <service ref="bindingAwareBroker" interface="org.opendaylight.controller.sal.binding.api.BindingAwareBroker"/>
</blueprint>
