<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:odl="http://opendaylight.org/xmlns/blueprint/v1.0.0">

  <!-- Runtime binding/normalized mapping service -->

  <reference id="classLoadingStrategy" interface="org.opendaylight.mdsal.binding.generator.api.ClassLoadingStrategy"/>
  <reference id="schemaService" interface="org.opendaylight.mdsal.dom.api.DOMSchemaService" />

  <bean id="mappingCodec" class="org.opendaylight.controller.md.sal.binding.impl.BindingToNormalizedNodeCodecFactory"
         factory-method="newInstance">
    <argument ref="classLoadingStrategy"/>
  </bean>

  <!-- Register the BindingToNormalizedNodeCodec with the SchemaService as a SchemaContextListener -->
  <bean id="mappingCodecListenerReg" class="org.opendaylight.controller.md.sal.binding.impl.BindingToNormalizedNodeCodecFactory"
         factory-method="registerInstance" destroy-method="close">
    <argument ref="mappingCodec"/>
    <argument ref="schemaService"/>
  </bean>

  <!-- Adapter service -->
  <bean id="adapterFactory" class="org.opendaylight.controller.md.sal.binding.impl.BindingAdapterFactory"/>

  <service id="factory" ref="adapterFactory" interface="org.opendaylight.controller.md.sal.binding.spi.AdapterFactory"/>

  <!-- Binding RPC Registry Service -->

  <reference id="delegateRpcConsumerRegistry" interface="org.opendaylight.mdsal.binding.api.RpcConsumerRegistry"
          odl:type="default"/>

  <bean id="bindingRpcServiceAdapter" class="org.opendaylight.controller.md.sal.binding.impl.BindingRpcServiceAdapter" >
    <argument ref="delegateRpcConsumerRegistry"/>
  </bean>

  <reference id="delegateRpcProviderService" interface="org.opendaylight.mdsal.binding.api.RpcProviderService"
          odl:type="default"/>

  <bean id="bindingRpcProviderAdapter" class="org.opendaylight.controller.md.sal.binding.impl.BindingRpcProviderServiceAdapter" >
    <argument ref="delegateRpcProviderService"/>
  </bean>

  <bean id="bindingRpcRegistry" class="org.opendaylight.controller.md.sal.binding.compat.HeliumRpcProviderRegistry" >
    <argument ref="bindingRpcServiceAdapter"/>
    <argument ref="bindingRpcProviderAdapter"/>
  </bean>

  <service ref="bindingRpcRegistry" interface="org.opendaylight.controller.sal.binding.api.RpcProviderRegistry"
          odl:type="default"/>

  <!-- Binding MountPoint Service -->

  <reference id="delegateMountPointService" interface="org.opendaylight.mdsal.binding.api.MountPointService"
          odl:type="default"/>

  <bean id="bindingMountPointService" class="org.opendaylight.controller.md.sal.binding.impl.BindingMountPointServiceAdapter" >
    <argument ref="delegateMountPointService"/>
  </bean>

  <service ref="bindingMountPointService" interface="org.opendaylight.controller.md.sal.binding.api.MountPointService"
          odl:type="default"/>

  <!-- Binding Notification Service -->

  <reference id="delegateNotificationService" interface="org.opendaylight.mdsal.binding.api.NotificationService"
          odl:type="default"/>

  <bean id="bindingNotificationServiceAdapter" class="org.opendaylight.controller.md.sal.binding.impl.BindingNotificationServiceAdapter">
    <argument ref="delegateNotificationService"/>
  </bean>

  <service ref="bindingNotificationServiceAdapter" interface="org.opendaylight.controller.md.sal.binding.api.NotificationService"
          odl:type="default"/>

  <reference id="delegateNotificationPublishService" interface="org.opendaylight.mdsal.binding.api.NotificationPublishService"
          odl:type="default"/>

  <bean id="bindingNotificationPublishAdapter" class="org.opendaylight.controller.md.sal.binding.impl.BindingNotificationPublishServiceAdapter">
    <argument ref="delegateNotificationPublishService"/>
  </bean>

  <service ref="bindingNotificationPublishAdapter" interface="org.opendaylight.controller.md.sal.binding.api.NotificationPublishService"
          odl:type="default"/>

  <reference id="domNotificationListenerRegistry" interface="org.opendaylight.controller.md.sal.dom.spi.DOMNotificationSubscriptionListenerRegistry"/>
  <reference id="domNotificationService" interface="org.opendaylight.controller.md.sal.dom.api.DOMNotificationService"/>

  <bean id="bindingNotificationProviderService" class="org.opendaylight.controller.md.sal.binding.compat.HeliumNotificationProviderServiceWithInterestListeners">
    <argument ref="bindingNotificationPublishAdapter"/>
    <argument ref="bindingNotificationServiceAdapter"/>
    <argument ref="domNotificationListenerRegistry"/>
    <argument ref="domNotificationService"/>
    <argument ref="mappingCodec"/>
  </bean>

  <service ref="bindingNotificationProviderService" odl:type="default">
    <interfaces>
      <value>org.opendaylight.controller.sal.binding.api.NotificationProviderService</value>
      <value>org.opendaylight.controller.sal.binding.api.NotificationService</value>
    </interfaces>
  </service>

  <!-- Binding DataBroker -->

  <reference id="delegateDefaultDataBroker" interface="org.opendaylight.mdsal.binding.api.DataBroker"
          odl:type="default"/>

  <bean id="bindingDataBroker" factory-ref="adapterFactory" factory-method="createDataBroker">
    <argument ref="delegateDefaultDataBroker"/>
  </bean>

  <service ref="bindingDataBroker" interface="org.opendaylight.controller.md.sal.binding.api.DataBroker"
          odl:type="default"/>

  <!-- Binding PingPong DataBroker -->

  <reference id="delegatePingPongDataBroker" interface="org.opendaylight.mdsal.binding.api.DataBroker"
          odl:type="pingpong"/>

  <bean id="bindingPingPongDataBroker" factory-ref="adapterFactory" factory-method="createDataBroker">
    <argument ref="delegatePingPongDataBroker"/>
  </bean>

  <service ref="bindingPingPongDataBroker" interface="org.opendaylight.controller.md.sal.binding.api.DataBroker"
          odl:type="pingpong"/>

  <!-- Legacy BindingAwareBroker -->

  <bean id="bindingAwareBroker" class="org.opendaylight.controller.sal.binding.impl.RootBindingAwareBroker"
      init-method="start" destroy-method="close">
    <argument value="deprecated-BindingAwareBroker"/>
    <property name="dataBroker" ref="bindingDataBroker"/>
    <property name="mountService" ref="bindingMountPointService"/>
    <property name="rpcBroker" ref="bindingRpcRegistry"/>
    <property name="notificationBroker" ref="bindingNotificationProviderService"/>
    <property name="notificationPublishService" ref="bindingNotificationPublishAdapter"/>
  </bean>

  <service ref="bindingAwareBroker" interface="org.opendaylight.controller.sal.binding.api.BindingAwareBroker"/>
</blueprint>
