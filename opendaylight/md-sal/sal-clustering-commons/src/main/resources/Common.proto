package org.opendaylight.controller.mdsal;

option java_package = "org.opendaylight.controller.protobuff.messages.common";
option java_outer_classname = "NormalizedNodeMessages";


message Attribute{
  required string name =1;
  optional string value=2;
  optional string type=3;
}

message PathArgumentAttribute{
    optional QName name =1;
    optional string value=2;
    optional int32 type=3;
}


message QName {
    optional string value=1; // @deprecated
    optional int32 namespace=2;
    optional int32 revision=3;
    optional int32 localName=4;
}

message PathArgument {
  optional string value=1; // @deprecated
  optional string type=2; // @deprecated

  optional QName nodeType=3;

  repeated PathArgumentAttribute attribute=4;
  repeated Attribute attributes=5; // @deprecated For backward compatibility (see InstanceIdentifierUtils)
  optional int32 intType = 6;
}

message InstanceIdentifier {
  repeated PathArgument arguments=1;
  
  // A list of string codes which can be used for any repeated strings in the path args. This is
  // optional - an InstanceIdentifier may be encoded as part of another message, eg NormalizedNode,
  // that contains the codes. 
  repeated string code = 2;
}

message Node{
  optional string path = 1; // @deprecated(use pathArgument)
  optional string type = 2; // @deprecated(use intType)
  optional PathArgument pathArgument = 3;
  optional int32 intType = 4;

  repeated Attribute attributes = 5;

  repeated Node child = 6;

  optional string value = 7;
  optional string valueType = 8; // @deprecated(use intValueType)
  optional int32 intValueType = 9; // instead of valueType

  // Specific values
  optional InstanceIdentifier instanceIdentifierValue = 10; // intValueType = YangInstanceIdentifier
  repeated string bitsValue = 11; // intValueType = Bits

  repeated string code = 12; // A list of string codes which can be used for any repeated strings in the NormalizedNode
}

message Container{
  required string parentPath =1 ;
  optional Node normalizedNode=2;
}

message NodeMapEntry{
  required InstanceIdentifier instanceIdentifierPath =1;
  optional Node normalizedNode=2;
}

message NodeMap{
repeated NodeMapEntry mapEntries=1;
}
