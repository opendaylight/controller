akka {
    persistence.snapshot-store.plugin = "mock-snapshot-store"
    persistence.journal.plugin = "mock-journal"

    loglevel = "INFO"
    loggers = ["akka.event.slf4j.Slf4jLogger"]

    actor {
        # enable to test serialization only.
        serialize-messages = off

        serializers {
          java  = "akka.serialization.JavaSerializer"
          proto = "akka.remote.serialization.ProtobufSerializer"
        }

        serialization-bindings {
            "org.opendaylight.controller.cluster.common.actor.Monitor" = java
            "org.opendaylight.controller.cluster.raft.client.messages.FindLeader" = java
            "org.opendaylight.controller.cluster.raft.ReplicatedLogImplEntry" = java
            "com.google.protobuf.Message" = proto
            "com.google.protobuf.GeneratedMessage" = proto
        }
    }
}

Member1 {
  bounded-mailbox {
    mailbox-type = "org.opendaylight.controller.cluster.common.actor.MeteredBoundedMailbox"
    mailbox-capacity = 1000
    mailbox-push-timeout-time = 100ms
  }

  akka {
    loglevel = "INFO"

    actor {
      provider = "akka.cluster.ClusterActorRefProvider"
      serialize-messages = on
      serialize-creators = on
      serializers {
        java = "akka.serialization.JavaSerializer"
        proto = "akka.remote.serialization.ProtobufSerializer"
      #  readylocal = "org.opendaylight.controller.cluster.datastore.messages.ReadyLocalTransactionSerializer"
      }

      serialization-bindings {
        "com.google.protobuf.Message" = proto
      #  "org.opendaylight.controller.cluster.datastore.messages.ReadyLocalTransaction" = readylocal
      }
    }
    remote {
      log-remote-lifecycle-events = off
      netty.tcp {
        hostname = "127.0.0.1"
        port = 2558
        maximum-frame-size = 419430400
        send-buffer-size = 52428800
        receive-buffer-size = 52428800
      }

    }

    cluster {
      auto-down-unreachable-after = 100s
      retry-unsuccessful-join-after = 100ms

      roles = [
        "member-1"
      ]
    }
  }
}

Member2 {
  bounded-mailbox {
    mailbox-type = "org.opendaylight.controller.cluster.common.actor.MeteredBoundedMailbox"
    mailbox-capacity = 1000
    mailbox-push-timeout-time = 100ms
  }

  akka {
    loglevel = "INFO"

    actor {
      provider = "akka.cluster.ClusterActorRefProvider"

      serializers {
        java = "akka.serialization.JavaSerializer"
        proto = "akka.remote.serialization.ProtobufSerializer"
        #readylocal = "org.opendaylight.controller.cluster.datastore.messages.ReadyLocalTransactionSerializer"
      }

      serialization-bindings {
        "com.google.protobuf.Message" = proto
       # "org.opendaylight.controller.cluster.datastore.messages.ReadyLocalTransaction" = readylocal
      }
    }
    remote {
      log-remote-lifecycle-events = off
      netty.tcp {
        hostname = "127.0.0.1"
        port = 2559
        maximum-frame-size = 419430400
        send-buffer-size = 52428800
        receive-buffer-size = 52428800
      }

    }

    cluster {
      auto-down-unreachable-after = 100s
      retry-unsuccessful-join-after = 100ms

      roles = [
        "member-2"
      ]
    }
  }
}


sal-akka-subchannel {
  message-reply-timeout = 30
  chunk-size = 1024000
  serializer-receive-timeout = 30
}


sal-akka-subchannel-test-mix {
  message-reply-timeout = 30
  #chunk-size = 1024000
  serializer-receive-timeout = 30
}


