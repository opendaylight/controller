akka {

    loglevel = "INFO"

    actor {
        # enable to test serialization only.
        # serialize-messages = on

        serializers {
          java  = "akka.serialization.JavaSerializer"
          proto = "akka.remote.serialization.ProtobufSerializer"
        }

        serialization-bindings {
            "org.opendaylight.controller.cluster.raft.ReplicatedLogImplEntry" = java
            "org.opendaylight.controller.cluster.notifications.RegisterRoleChangeListener" = java
            "com.google.protobuf.Message" = proto
            "com.google.protobuf.GeneratedMessage" = proto
        }

        warn-about-java-serializer-usage = false
    }

    persistence {
        journal {
            plugin = "akka.persistence.journal.leveldb"

            inmem {
                # Class name of the plugin.
                class = "akka.persistence.journal.inmem.InmemJournal"
                # Dispatcher for the plugin actor.
                plugin-dispatcher = "akka.actor.default-dispatcher"
            }
            # LevelDB journal plugin.
            leveldb {

                # Class name of the plugin.
                class = "akka.persistence.journal.leveldb.LeveldbJournal"

                # Dispatcher for the plugin actor.
                plugin-dispatcher = "akka.persistence.dispatchers.default-plugin-dispatcher"

                # Dispatcher for message replay.
                replay-dispatcher = "akka.persistence.dispatchers.default-replay-dispatcher"

                # Storage location of LevelDB files.
                dir = "journal"

                # Use fsync on write
                fsync = on

                # Verify checksum on read.
                checksum = off

                # Native LevelDB (via JNI) or LevelDB Java port
                native = on
            }
        }

        snapshot-store {
            plugin = akka.persistence.snapshot-store.local
            snapshot-store.local.dir = "snapshots"
        }
    }
}
