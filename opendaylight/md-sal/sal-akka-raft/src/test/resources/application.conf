akka {
    persistence.snapshot-store.plugin = "mock-snapshot-store"
    persistence.journal.plugin = "mock-journal"

    loglevel = "DEBUG"
    loggers = ["akka.testkit.TestEventListener", "akka.event.slf4j.Slf4jLogger"]

    actor {
        # enable to test serialization only.
        serialize-messages = off

        serializers {
          java  = "akka.serialization.JavaSerializer"
          proto = "akka.remote.serialization.ProtobufSerializer"
        }

        serialization-bindings {
            "org.opendaylight.controller.cluster.common.actor.Monitor" = java
            "org.opendaylight.controller.cluster.raft.client.messages.FindLeader" = java
            "org.opendaylight.controller.cluster.raft.ReplicatedLogImplEntry" = java
            "com.google.protobuf.Message" = proto
            "com.google.protobuf.GeneratedMessage" = proto
        }
    }
}

test {
  bounded-mailbox {
    mailbox-type = "org.opendaylight.controller.cluster.common.actor.MeteredBoundedMailbox"
    mailbox-capacity = 1000
    mailbox-push-timeout-time = 100ms
  }

  in-memory-journal {
    class = "org.opendaylight.controller.cluster.raft.utils.InMemoryJournal"
  }

  in-memory-snapshot-store {
    class = "org.opendaylight.controller.cluster.raft.utils.InMemorySnapshotStore"
    plugin-dispatcher = "akka.persistence.dispatchers.default-plugin-dispatcher"
  }

  akka {
    persistence.snapshot-store.plugin = "in-memory-snapshot-store"
    persistence.journal.plugin = "in-memory-journal"

    loglevel = "INFO"

    actor {
      provider = "akka.cluster.ClusterActorRefProvider"

      serializers {
          java = "akka.serialization.JavaSerializer"
          proto = "akka.remote.serialization.ProtobufSerializer"
      }

      serialization-bindings {
          "com.google.protobuf.Message" = proto
      }
    }
    remote {
      log-remote-lifecycle-events = off
      netty.tcp {
        hostname = "127.0.0.1"
        port = 2565
      }
    }

    cluster {
      auto-down-unreachable-after = 100s
      retry-unsuccessful-join-after = 100ms

      roles = [
        "member-1"
      ]
    }
  }
}

mock-snapshot-store {
  # Class name of the plugin.
  class = "org.opendaylight.controller.cluster.raft.utils.InMemorySnapshotStore"
  # Dispatcher for the plugin actor.
  plugin-dispatcher = "akka.persistence.dispatchers.default-plugin-dispatcher"
}

mock-journal {
  # Class name of the plugin.
  class = "org.opendaylight.controller.cluster.raft.utils.InMemoryJournal"
  # Dispatcher for the plugin actor.
  plugin-dispatcher = "akka.persistence.dispatchers.default-plugin-dispatcher"
}
