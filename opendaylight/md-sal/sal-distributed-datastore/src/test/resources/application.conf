pekko {
    persistence.snapshot-store.plugin = "in-memory-snapshot-store"
    persistence.journal.plugin = "in-memory-journal"
    coordinated-shutdown.run-by-actor-system-terminate = off
    persistence.non-persistent.journal {
      class = "org.opendaylight.controller.cluster.raft.utils.InMemoryJournal"
    }

    loggers = ["org.apache.pekko.testkit.TestEventListener", "org.apache.pekko.event.slf4j.Slf4jLogger"]

    actor {
      warn-about-java-serializer-usage = false
    }
}

in-memory-journal {
    class = "org.opendaylight.controller.cluster.raft.utils.InMemoryJournal"
}

in-memory-snapshot-store {
  # Class name of the plugin.
  class = "org.opendaylight.controller.cluster.raft.utils.InMemorySnapshotStore"
  # Dispatcher for the plugin actor.
  plugin-dispatcher = "pekko.persistence.dispatchers.default-plugin-dispatcher"
}

bounded-mailbox {
  mailbox-type = "org.opendaylight.controller.cluster.common.actor.MeteredBoundedMailbox"
  mailbox-capacity = 1000
  mailbox-push-timeout-time = 100ms
}

test-config {
  bounded-mailbox {
    mailbox-type = "org.opendaylight.controller.cluster.common.actor.MeteredBoundedMailbox"
    mailbox-capacity = 1000
    mailbox-push-timeout-time = 100ms
  }

  in-memory-journal {
    class = "org.opendaylight.controller.cluster.raft.utils.InMemoryJournal"
  }

  in-memory-snapshot-store {
    class = "org.opendaylight.controller.cluster.raft.utils.InMemorySnapshotStore"
    plugin-dispatcher = "pekko.persistence.dispatchers.default-plugin-dispatcher"
  }

  shard-dispatcher {
    type = Dispatcher
    executor = "default-executor"
    mailbox-type = "org.opendaylight.controller.cluster.common.actor.UnboundedDequeBasedControlAwareMailbox"
  }

  pekko {
    persistence.snapshot-store.plugin = "in-memory-snapshot-store"
    persistence.journal.plugin = "in-memory-journal"
    coordinated-shutdown.run-by-actor-system-terminate = off

    persistence.non-persistent.journal {
      class = "org.opendaylight.controller.cluster.raft.utils.InMemoryJournal"
    }
    loglevel = "INFO"

    actor {
      provider = "org.apache.pekko.cluster.ClusterActorRefProvider"
      warn-about-java-serializer-usage = false
    }
    remote {
      classic {
        netty.tcp {
          hostname = "127.0.0.1"
          port = 2565
        }
      }

      log-remote-lifecycle-events = off
      artery {
        enabled = on
        canonical.hostname = "127.0.0.1"
        canonical.port = 2565
        transport = tcp
      }

      netty.tcp {
        hostname = "127.0.0.1"
        port = 2565
      }
    }

    cluster {
      retry-unsuccessful-join-after = 100ms

      roles = [
        "member-1"
      ]
    }
  }
}

Member1 {
  bounded-mailbox {
    mailbox-type = "org.opendaylight.controller.cluster.common.actor.MeteredBoundedMailbox"
    mailbox-capacity = 1000
    mailbox-push-timeout-time = 100ms
  }

  in-memory-journal {
    class = "org.opendaylight.controller.cluster.raft.utils.InMemoryJournal"
  }

  in-memory-snapshot-store {
    class = "org.opendaylight.controller.cluster.raft.utils.InMemorySnapshotStore"
    plugin-dispatcher = "pekko.persistence.dispatchers.default-plugin-dispatcher"
  }

  shard-dispatcher {
    type = Dispatcher
    executor = "default-executor"
    mailbox-type = "org.opendaylight.controller.cluster.common.actor.UnboundedDequeBasedControlAwareMailbox"
  }

  pekko {
    persistence.snapshot-store.plugin = "in-memory-snapshot-store"
    persistence.journal.plugin = "in-memory-journal"
    coordinated-shutdown.run-by-actor-system-terminate = off

    persistence.non-persistent.journal {
      class = "org.opendaylight.controller.cluster.raft.utils.InMemoryJournal"
    }

    loglevel = "INFO"

    actor {
      provider = "org.apache.pekko.cluster.ClusterActorRefProvider"
      warn-about-java-serializer-usage = false
    }
    remote {
      classic {
        netty.tcp {
          hostname = "127.0.0.1"
          port = 2558
        }
      }

      log-remote-lifecycle-events = off
      artery {
        enabled = on
        canonical.hostname = "127.0.0.1"
        canonical.port = 2558
        transport = tcp
      }

      netty.tcp {
        hostname = "127.0.0.1"
        port = 2558
      }
    }

    cluster {
      retry-unsuccessful-join-after = 100ms

      roles = [
        "member-1"
      ]
    }
  }
}

Member2 {
  bounded-mailbox {
    mailbox-type = "org.opendaylight.controller.cluster.common.actor.MeteredBoundedMailbox"
    mailbox-capacity = 1000
    mailbox-push-timeout-time = 100ms
  }

  in-memory-journal {
    class = "org.opendaylight.controller.cluster.raft.utils.InMemoryJournal"
  }

  in-memory-snapshot-store {
    class = "org.opendaylight.controller.cluster.raft.utils.InMemorySnapshotStore"
    plugin-dispatcher = "pekko.persistence.dispatchers.default-plugin-dispatcher"
  }

  shard-dispatcher {
    type = Dispatcher
    executor = "default-executor"
    mailbox-type = "org.opendaylight.controller.cluster.common.actor.UnboundedDequeBasedControlAwareMailbox"
  }

  pekko {
    persistence.snapshot-store.plugin = "in-memory-snapshot-store"
    persistence.journal.plugin = "in-memory-journal"
    coordinated-shutdown.run-by-actor-system-terminate = off

    persistence.non-persistent.journal {
      class = "org.opendaylight.controller.cluster.raft.utils.InMemoryJournal"
    }

    actor {
      provider = "org.apache.pekko.cluster.ClusterActorRefProvider"
      warn-about-java-serializer-usage = false
    }
    remote {
      classic {
        netty.tcp {
          hostname = "127.0.0.1"
          port = 2559
        }
      }

      log-remote-lifecycle-events = off
      artery {
        enabled = on
        canonical.hostname = "127.0.0.1"
        canonical.port = 2559
        transport = tcp
      }

      netty.tcp {
        hostname = "127.0.0.1"
        port = 2559
      }
    }

    cluster {
      retry-unsuccessful-join-after = 100ms

      roles = [
        "member-2"
      ]
    }
  }
}

Member3 {
  bounded-mailbox {
    mailbox-type = "org.opendaylight.controller.cluster.common.actor.MeteredBoundedMailbox"
    mailbox-capacity = 1000
    mailbox-push-timeout-time = 100ms
  }

  in-memory-journal {
    class = "org.opendaylight.controller.cluster.raft.utils.InMemoryJournal"
  }

  in-memory-snapshot-store {
    class = "org.opendaylight.controller.cluster.raft.utils.InMemorySnapshotStore"
    plugin-dispatcher = "pekko.persistence.dispatchers.default-plugin-dispatcher"
  }

  shard-dispatcher {
    type = Dispatcher
    executor = "default-executor"
    mailbox-type = "org.opendaylight.controller.cluster.common.actor.UnboundedDequeBasedControlAwareMailbox"
  }

  pekko {
    persistence.snapshot-store.plugin = "in-memory-snapshot-store"
    persistence.journal.plugin = "in-memory-journal"
    coordinated-shutdown.run-by-actor-system-terminate = off

    persistence.non-persistent.journal {
      class = "org.opendaylight.controller.cluster.raft.utils.InMemoryJournal"
    }

    loglevel = "INFO"

    actor {
      provider = "org.apache.pekko.cluster.ClusterActorRefProvider"
      warn-about-java-serializer-usage = false
    }
    remote {
      classic {
        netty.tcp {
          hostname = "127.0.0.1"
          port = 2557
        }
      }

      log-remote-lifecycle-events = off
      artery {
        enabled = on
        canonical.hostname = "127.0.0.1"
        canonical.port = 2557
        transport = tcp
      }

      netty.tcp {
        hostname = "127.0.0.1"
        port = 2557
      }
    }

    cluster {
      retry-unsuccessful-join-after = 100ms

      roles = [
        "member-3"
      ]
    }
  }
}

Member4 {
  bounded-mailbox {
    mailbox-type = "org.opendaylight.controller.cluster.common.actor.MeteredBoundedMailbox"
    mailbox-capacity = 1000
    mailbox-push-timeout-time = 100ms
  }

  in-memory-journal {
    class = "org.opendaylight.controller.cluster.raft.utils.InMemoryJournal"
  }

  in-memory-snapshot-store {
    class = "org.opendaylight.controller.cluster.raft.utils.InMemorySnapshotStore"
    plugin-dispatcher = "pekko.persistence.dispatchers.default-plugin-dispatcher"
  }

  shard-dispatcher {
    type = Dispatcher
    executor = "default-executor"
    mailbox-type = "org.opendaylight.controller.cluster.common.actor.UnboundedDequeBasedControlAwareMailbox"
  }

  pekko {
    persistence.snapshot-store.plugin = "in-memory-snapshot-store"
    persistence.journal.plugin = "in-memory-journal"
    coordinated-shutdown.run-by-actor-system-terminate = off

    persistence.non-persistent.journal {
      class = "org.opendaylight.controller.cluster.raft.utils.InMemoryJournal"
    }

    loglevel = "INFO"

    actor {
      provider = "org.apache.pekko.cluster.ClusterActorRefProvider"
      warn-about-java-serializer-usage = false
    }
    remote {
      classic {
        netty.tcp {
          hostname = "127.0.0.1"
          port = 2560
        }
      }

      log-remote-lifecycle-events = off
      artery {
        enabled = on
        canonical.hostname = "127.0.0.1"
        canonical.port = 2560
        transport = tcp
      }

      netty.tcp {
        hostname = "127.0.0.1"
        port = 2560
      }
    }

    cluster {
      retry-unsuccessful-join-after = 100ms

      roles = [
        "member-4"
      ]
    }
  }
}

Member5 {
  bounded-mailbox {
    mailbox-type = "org.opendaylight.controller.cluster.common.actor.MeteredBoundedMailbox"
    mailbox-capacity = 1000
    mailbox-push-timeout-time = 100ms
  }

  in-memory-journal {
    class = "org.opendaylight.controller.cluster.raft.utils.InMemoryJournal"
  }

  in-memory-snapshot-store {
    class = "org.opendaylight.controller.cluster.raft.utils.InMemorySnapshotStore"
    plugin-dispatcher = "pekko.persistence.dispatchers.default-plugin-dispatcher"
  }

  shard-dispatcher {
    type = Dispatcher
    executor = "default-executor"
    mailbox-type = "org.opendaylight.controller.cluster.common.actor.UnboundedDequeBasedControlAwareMailbox"
  }

  pekko {
    persistence.snapshot-store.plugin = "in-memory-snapshot-store"
    persistence.journal.plugin = "in-memory-journal"
    coordinated-shutdown.run-by-actor-system-terminate = off

    persistence.non-persistent.journal {
      class = "org.opendaylight.controller.cluster.raft.utils.InMemoryJournal"
    }

    loglevel = "INFO"

    actor {
      provider = "org.apache.pekko.cluster.ClusterActorRefProvider"
      warn-about-java-serializer-usage = false
    }
    remote {
      classic {
        netty.tcp {
          hostname = "127.0.0.1"
          port = 2561
        }
      }

      log-remote-lifecycle-events = off
      artery {
        enabled = on
        canonical.hostname = "127.0.0.1"
        canonical.port = 2561
        transport = tcp
      }

      netty.tcp {
        hostname = "127.0.0.1"
        port = 2561
      }
    }

    cluster {
      retry-unsuccessful-join-after = 100ms

      roles = [
        "member-5"
      ]
    }
  }
}

Member256 {
  bounded-mailbox {
    mailbox-type = "org.opendaylight.controller.cluster.common.actor.MeteredBoundedMailbox"
    mailbox-capacity = 1000
    mailbox-push-timeout-time = 100ms
  }

  in-memory-journal {
    class = "org.opendaylight.controller.cluster.raft.utils.InMemoryJournal"
  }

  in-memory-snapshot-store {
    class = "org.opendaylight.controller.cluster.raft.utils.InMemorySnapshotStore"
    plugin-dispatcher = "pekko.persistence.dispatchers.default-plugin-dispatcher"
  }

  shard-dispatcher {
    type = Dispatcher
    executor = "default-executor"
    mailbox-type = "org.opendaylight.controller.cluster.common.actor.UnboundedDequeBasedControlAwareMailbox"
  }

  pekko {
    persistence.snapshot-store.plugin = "in-memory-snapshot-store"
    persistence.journal.plugin = "in-memory-journal"
    coordinated-shutdown.run-by-actor-system-terminate = off

    persistence.non-persistent.journal {
      class = "org.opendaylight.controller.cluster.raft.utils.InMemoryJournal"
    }

    loglevel = "INFO"

    actor {
      provider = "org.apache.pekko.cluster.ClusterActorRefProvider"
      warn-about-java-serializer-usage = false
    }
    remote {
      classic {
        netty.tcp {
          hostname = "127.0.0.1"
          port = 2562
        }
      }

      log-remote-lifecycle-events = off
      artery {
        enabled = on
        canonical.hostname = "127.0.0.1"
        canonical.port = 2562
        transport = tcp
      }

      netty.tcp {
        hostname = "127.0.0.1"
        port = 2562
      }
    }

    cluster {
      retry-unsuccessful-join-after = 100ms

      roles = [
        "member-256"
      ]
    }
  }
}

Member1-without-artery {
  pekko.remote.artery.enabled = off
}

Member2-without-artery {
  pekko.remote.artery.enabled = off
}

Member3-without-artery {
  pekko.remote.artery.enabled = off
}

Member4-without-artery {
  pekko.remote.artery.enabled = off
}

Member5-without-artery {
  pekko.remote.artery.enabled = off
}
