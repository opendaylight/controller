akka {

    loglevel = "DEBUG"

    actor {
        # enable to test serialization only.
        # serialize-messages = on

        serializers {
          java  = "akka.serialization.JavaSerializer"
          proto = "akka.remote.serialization.ProtobufSerializer"
        }

        serialization-bindings {
            "org.opendaylight.controller.cluster.raft.ReplicatedLogImplEntry" = java
            "org.opendaylight.controller.cluster.notifications.RegisterRoleChangeListener" = java
            "com.google.protobuf.Message" = proto
            "com.google.protobuf.GeneratedMessage" = proto
        }
    }
}

raft-test {
    akka {

        loglevel = "DEBUG"

        actor {
            # enable to test serialization only.
            # serialize-messages = on

            provider = "akka.remote.RemoteActorRefProvider"

            serializers {
              java  = "akka.serialization.JavaSerializer"
              proto = "akka.remote.serialization.ProtobufSerializer"
            }

            serialization-bindings {
                "org.opendaylight.controller.cluster.raft.ReplicatedLogImplEntry" = java
                "org.opendaylight.controller.cluster.notifications.RegisterRoleChangeListener" = java
                "com.google.protobuf.Message" = proto
                "com.google.protobuf.GeneratedMessage" = proto
            }
        }

        remote {
            log-remote-lifecycle-events = off
            artery {
                enabled = on
                canonical.hostname = "127.0.0.1"
                canonical.port = 2550
            }
        }
    }
}

raft-test-listener {

  akka {
    loglevel = "DEBUG"

    actor {
        provider = "akka.remote.RemoteActorRefProvider"
    }

    remote {
        log-remote-lifecycle-events = off
        artery {
            enabled = on
            canonical.hostname = "127.0.0.1"
            canonical.port = 2554
        }
    }

    member-id = "member-1"
  }
}



