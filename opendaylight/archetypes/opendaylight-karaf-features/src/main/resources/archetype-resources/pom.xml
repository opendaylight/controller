<?xml version="1.0" encoding="UTF-8"?>
<!--
 Necessary TODO: Put your copyright here.

 This program and the accompanying materials are made available under the
 terms of the Eclipse Public License v1.0 which accompanies this distribution,
 and is available at http://www.eclipse.org/legal/epl-v10.html
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <!--
    Necessary TODO: Hookup your parent pom here, else you will not get necessary versions,
    maven repos etc.  If you run this archetype in a subdirectory of your project, it
    will pick the pom.xml from the parent directory as the parent pom, which may or may
    not be correct.
  -->
   <artifactId>features-${repoName}</artifactId>
   <groupId>${groupId}</groupId>
   <!-- Optional TODO: Uncomment version if you are not using a parent pom.xml
   <version>${version}</version>
   -->
   <packaging>jar</packaging>
   <properties>
      <features.file>features.xml</features.file>
      <!-- Optional TODO: Move these properties to your parent pom and possibly
            DependencyManagement section of your parent pom -->
      <branding.version>1.1.0-SNAPSHOT</branding.version>
      <karaf.resources.version>1.5.0-SNAPSHOT</karaf.resources.version>
      <karaf.version>3.0.1</karaf.version>
      <feature.test.version>1.5.0-SNAPSHOT</feature.test.version>
      <karaf.empty.version>1.5.0-SNAPSHOT</karaf.empty.version>
      <surefire.version>2.16</surefire.version>
   </properties>
   <dependencies>
    <!--
      Necessary TODO: Put dependencies on any feature repos
      you use in your features.xml file.

      Note: they will need to be <type>xml</xml>
      and <classifier>features</classifier>.
      One other thing to watch for is to make sure they are
      <scope>compile</compile>, which they should be by default,
      but be cautious lest they be at a different scope in a parent pom.

      Examples:
        <dependency>
          <groupId>org.opendaylight.yangtools</groupId>
          <artifactId>features-yangtools</artifactId>
          <version>0.7.0-SNAPSHOT</version>
          <classifier>features</classifier>
          <type>xml</type>
        </dependency>
        <dependency>
          <groupId>org.opendaylight.controller</groupId>
          <artifactId>features-mdsal</artifactId>
          <version>1.2.0-SNAPSHOT</version>
          <classifier>features</classifier>
          <type>xml</type>
        </dependency>
        <dependency>
          <groupId>org.opendaylight.openflowplugin</groupId>
          <artifactId>features-openflowplugin</artifactId>
          <version>0.1.0-SNAPSHOT</version>
          <classifier>features</classifier>
          <type>xml</type>
        </dependency>
    -->

    <!--
      Necessary TODO: Put dependencies for bundles directly referenced
      in your features.xml file.  For every <bundle> reference in your
      features.xml file, you need a corresponding dependency here.

      Examples:
      <dependency>
        <groupId>${groupId}</groupId>
        <artifactId>${repoName}-provider</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${groupId}</groupId>
        <artifactId>${repoName}-model</artifactId>
        <version>${project.version}</version>
      </dependency>
    -->

    <!--
      Necessary TODO: Put dependencies for configfiles directly referenced
      in your features.xml file.  For every <configfile> reference in your
      features.xml file, you need a corresponding dependency here.

      Example (presuming here version is coming from the parent pom):
      <dependency>
        <groupId>${groupId}</groupId>
        <artifactId>${repoName}-config</artifactId>
        <version>${project.version}</version>
        <type>xml</type>
        <classifier>config</classifier>
      </dependency>
    -->

    <!--
      Optional TODO: Remove TODO comments.
    -->
    <!-- test to validate features.xml -->
    <dependency>
      <groupId>org.opendaylight.odlparent</groupId>
      <artifactId>features-test</artifactId>
      <version>${feature.test.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- dependency for opendaylight-karaf-empty for use by testing -->
    <dependency>
      <groupId>org.opendaylight.controller</groupId>
      <artifactId>opendaylight-karaf-empty</artifactId>
      <version>${karaf.empty.version}</version>
      <type>zip</type>
    </dependency>
    <!-- Uncomment this if you get an error : java.lang.NoSuchMethodError: org.slf4j.helpers.MessageFormatter.format(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/slf4j/helpers/FormattingTuple;
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.7.2</version>
    </dependency>
    -->

   </dependencies>
   <build>
      <resources>
         <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
         </resource>
      </resources>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
               <execution>
                  <id>filter</id>
                  <phase>generate-resources</phase>
                  <goals>
                     <goal>resources</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
               <execution>
                  <id>attach-artifacts</id>
                  <phase>package</phase>
                  <goals>
                     <goal>attach-artifact</goal>
                  </goals>
                  <configuration>
                     <artifacts>
                        <artifact>
                           <file>${project.build.directory}/classes/${features.file}</file>
                           <type>xml</type>
                           <classifier>features</classifier>
                        </artifact>
                     </artifacts>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire.version}</version>
            <configuration>
              <systemPropertyVariables>
                <karaf.distro.groupId>org.opendaylight.controller</karaf.distro.groupId>
                <karaf.distro.artifactId>opendaylight-karaf-empty</karaf.distro.artifactId>
                <karaf.distro.version>${karaf.empty.version}</karaf.distro.version>
              </systemPropertyVariables>
              <dependenciesToScan>
               <dependency>org.opendaylight.odlparent:features-test</dependency>
              </dependenciesToScan>
            </configuration>
          </plugin>
      </plugins>
   </build>
   <scm>
      <connection>scm:git:ssh://git.opendaylight.org:29418/${repoName}.git</connection>
      <developerConnection>scm:git:ssh://git.opendaylight.org:29418/${repoName}.git</developerConnection>
      <tag>HEAD</tag>
      <url>https://git.opendaylight.org/gerrit/gitweb?p=${repoName}.git;a=summary</url>
   </scm>
</project>
