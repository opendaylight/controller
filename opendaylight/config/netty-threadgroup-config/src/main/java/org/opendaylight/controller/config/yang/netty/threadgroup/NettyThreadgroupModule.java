/*
 * Copyright (c) 2013 Cisco Systems, Inc. and others.  All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0 which accompanies this distribution,
 * and is available at http://www.eclipse.org/legal/epl-v10.html
 */

/**
* Generated file

* Generated from: yang module name: nsos-threadpool  yang module local name: netty-threadgroup-fixed
* Generated by: org.opendaylight.controller.config.yangjmxgenerator.plugin.JMXGenerator
* Generated at: Fri Nov 08 08:31:45 CET 2013
*
* Do not modify this file unless it is present under src/main directory
*/
package org.opendaylight.controller.config.yang.netty.threadgroup;

import io.netty.channel.nio.NioEventLoopGroup;

import org.opendaylight.controller.config.api.JmxAttributeValidationException;

import java.util.concurrent.TimeUnit;

/**
*
*/
public final class NettyThreadgroupModule extends org.opendaylight.controller.config.yang.netty.threadgroup.AbstractNettyThreadgroupModule
{
    public NettyThreadgroupModule(org.opendaylight.controller.config.api.ModuleIdentifier name, org.opendaylight.controller.config.api.DependencyResolver dependencyResolver) {
        super(name, dependencyResolver);
    }

    public NettyThreadgroupModule(org.opendaylight.controller.config.api.ModuleIdentifier name, org.opendaylight.controller.config.api.DependencyResolver dependencyResolver, NettyThreadgroupModule oldModule, java.lang.AutoCloseable oldInstance) {
        super(name, dependencyResolver, oldModule, oldInstance);
    }

    @Override
    public void validate(){
        if(getThreadCount()!=null) {
            JmxAttributeValidationException.checkCondition(getThreadCount() > 0, "value must be greater than 0",
                    threadCountJmxAttribute);
        }
    }

    @Override
    public java.lang.AutoCloseable createInstance() {
        return getThreadCount()==null ? new NioEventLoopGroupCloseable() : new NioEventLoopGroupCloseable(getThreadCount());
    }


    private class NioEventLoopGroupCloseable extends NioEventLoopGroup implements AutoCloseable {


        public NioEventLoopGroupCloseable(int threadCount) {
            super(threadCount);
        }

        public NioEventLoopGroupCloseable() {
            super();
        }

        @Override
        public void close() throws Exception {
            shutdownGracefully(0, 1, TimeUnit.SECONDS);
        }
    }
}
