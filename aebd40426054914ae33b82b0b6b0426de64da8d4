{
  "comments": [
    {
      "key": {
        "uuid": "7a96c907_af58cc32",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/ThreePhaseCommitCohortProxy.java",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-05T03:42:55Z",
      "side": 1,
      "message": "Can we have ActorContext return a shared Timeout instance, i.e. getShardTransactionCommitTimeout() to save 2 object creations here each time?",
      "revId": "aebd40426054914ae33b82b0b6b0426de64da8d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_efd1f457",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/ThreePhaseCommitCohortProxy.java",
        "patchSetId": 1
      },
      "lineNbr": 203,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-05T03:42:55Z",
      "side": 1,
      "message": "So why do we only time the commit phase and not the canCommit as well (preCommit is a noop in this class)?",
      "revId": "aebd40426054914ae33b82b0b6b0426de64da8d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_ef9c94c2",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/ThreePhaseCommitCohortProxy.java",
        "patchSetId": 1
      },
      "lineNbr": 278,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-05T03:42:55Z",
      "side": 1,
      "message": "Same as below - we can move this call last in this block (even though it doesn\u0027t do anything right now).",
      "revId": "aebd40426054914ae33b82b0b6b0426de64da8d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_8f64f0e5",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/ThreePhaseCommitCohortProxy.java",
        "patchSetId": 1
      },
      "lineNbr": 298,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-05T03:42:55Z",
      "side": 1,
      "message": "How about calling this after returnFuture.set(null) below so we free up the future callback listener quicker as success() incurs some processing overhead. Plus if an unchecked exception was grown from success(), at least it wouldn\u0027t affect the returnFuture.",
      "revId": "aebd40426054914ae33b82b0b6b0426de64da8d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_6fde446f",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/ThreePhaseCommitCohortProxy.java",
        "patchSetId": 1
      },
      "lineNbr": 330,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-05T03:42:55Z",
      "side": 1,
      "message": "I assume we don\u0027t get new Timer instance each call to the MetricsRegistry.",
      "revId": "aebd40426054914ae33b82b0b6b0426de64da8d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_8fd95085",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/ThreePhaseCommitCohortProxy.java",
        "patchSetId": 1
      },
      "lineNbr": 345,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-05T03:42:55Z",
      "side": 1,
      "message": "I assume the Timer class is thread safe and concurrent?",
      "revId": "aebd40426054914ae33b82b0b6b0426de64da8d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_ef4ed46e",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/utils/ActorContext.java",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-05T03:42:55Z",
      "side": 1,
      "message": "Would it be easier to put dataStoreType in DatastoreContext to eliminate a parameter here (and also if we ever need  dataStoreType elsewhere)?",
      "revId": "aebd40426054914ae33b82b0b6b0426de64da8d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_efea540e",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/utils/ActorContext.java",
        "patchSetId": 1
      },
      "lineNbr": 471,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-05T03:42:55Z",
      "side": 1,
      "message": "It looks like rate can be computed once in the ctor.",
      "revId": "aebd40426054914ae33b82b0b6b0426de64da8d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_4f8ca87f",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/utils/ActorContext.java",
        "patchSetId": 1
      },
      "lineNbr": 472,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-05T03:42:55Z",
      "side": 1,
      "message": "I\u0027m not familiar with the MetricRegistry library. Is it expensive to create a timer?",
      "revId": "aebd40426054914ae33b82b0b6b0426de64da8d4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}