{
  "comments": [
    {
      "key": {
        "uuid": "1aa4ed85_51bb1ae5",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/TimedRunnable.java",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 3172
      },
      "writtenOn": "2016-01-05T18:59:58Z",
      "side": 1,
      "message": "Even if canRun is volatile, it looks like it\u0027s possible for doRun() and doCancel() to both execute.  Is TimedRunnable intended to guarantee that only one or the other will get executed?  If so, we might need a lock somewhere.",
      "revId": "7dc55303551bc76d56129dbe5372bcc245fe6660",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_b19a8e6c",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/TimedRunnable.java",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1842
      },
      "writtenOn": "2016-01-05T19:11:51Z",
      "side": 1,
      "message": "The cancel timer Runnable is a message that is executed  on the actor\u0027s dispatch thread so no synchronization/concurrency protection is needed.",
      "parentUuid": "1aa4ed85_51bb1ae5",
      "revId": "7dc55303551bc76d56129dbe5372bcc245fe6660",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_b1bfeea9",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/TimedRunnable.java",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 3172
      },
      "writtenOn": "2016-01-05T19:39:32Z",
      "side": 1,
      "message": "Yes, but there\u0027s no guarantee that this Runnable is run by the same actor as the one passed in the constructor.  Someone who didn\u0027t know better could conceivably run a TimedRunnable directly using Thread.start(), no?  TimedRunnable seems like a good generic utility class, and I\u0027m concerned that someone might end up using it as such without understanding the caveats.",
      "parentUuid": "1aa4ed85_b19a8e6c",
      "revId": "7dc55303551bc76d56129dbe5372bcc245fe6660",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_5196baf1",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/TimedRunnable.java",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1842
      },
      "writtenOn": "2016-01-05T20:55:28Z",
      "side": 1,
      "message": "There\u0027s no guarantee but that\u0027s the intended semantics/usage. Even if I added synchronization wrt to canRun, there would still be an issue with doRun being executed outside the intended actor\u0027s context. How about if I add javadocs stating the restrictions, i.e. it\u0027s not thread safe and intended for use within the context of the same actor that\u0027s passed on construction?",
      "parentUuid": "1aa4ed85_b1bfeea9",
      "revId": "7dc55303551bc76d56129dbe5372bcc245fe6660",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_f18486b2",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/TimedRunnable.java",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 3172
      },
      "writtenOn": "2016-01-05T20:58:16Z",
      "side": 1,
      "message": "Sounds good.  Thanks!",
      "parentUuid": "1aa4ed85_5196baf1",
      "revId": "7dc55303551bc76d56129dbe5372bcc245fe6660",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}