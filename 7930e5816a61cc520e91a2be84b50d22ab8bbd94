{
  "comments": [
    {
      "key": {
        "uuid": "da6255ed_1d49a38b",
        "filename": "opendaylight/samples/simpleforwarding/src/main/java/org/opendaylight/controller/samples/simpleforwarding/IBroadcastHandler.java",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 13
      },
      "writtenOn": "2013-10-10T16:59:05Z",
      "side": 1,
      "message": "Please add the copyright notice",
      "revId": "7930e5816a61cc520e91a2be84b50d22ab8bbd94",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_054b6f5a",
        "filename": "opendaylight/samples/simpleforwarding/src/main/java/org/opendaylight/controller/samples/simpleforwarding/IBroadcastHandler.java",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 11
      },
      "writtenOn": "2013-10-17T12:57:25Z",
      "side": 1,
      "message": "I dont know if it is a convention that is followed in other projects. But atleast in Controller project, we dont add authors.",
      "revId": "7930e5816a61cc520e91a2be84b50d22ab8bbd94",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_e5473b4a",
        "filename": "opendaylight/samples/simpleforwarding/src/main/java/org/opendaylight/controller/samples/simpleforwarding/IBroadcastHandler.java",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 11
      },
      "writtenOn": "2013-10-17T12:57:25Z",
      "side": 1,
      "message": "Same here.",
      "revId": "7930e5816a61cc520e91a2be84b50d22ab8bbd94",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_fd5daf49",
        "filename": "opendaylight/samples/simpleforwarding/src/main/java/org/opendaylight/controller/samples/simpleforwarding/IBroadcastPortSelector.java",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 13
      },
      "writtenOn": "2013-10-10T16:59:05Z",
      "side": 1,
      "message": "Copyright notice",
      "revId": "7930e5816a61cc520e91a2be84b50d22ab8bbd94",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_a9549dca",
        "filename": "opendaylight/samples/simpleforwarding/src/main/java/org/opendaylight/controller/samples/simpleforwarding/IBroadcastPortSelector.java",
        "patchSetId": 3
      },
      "lineNbr": 8,
      "author": {
        "id": 739
      },
      "writtenOn": "2013-10-09T09:23:38Z",
      "side": 1,
      "message": "no need to mark interface method as public.",
      "revId": "7930e5816a61cc520e91a2be84b50d22ab8bbd94",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_dd5aeb4f",
        "filename": "opendaylight/samples/simpleforwarding/src/main/java/org/opendaylight/controller/samples/simpleforwarding/internal/SimpleBroadcastHandlerImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 13
      },
      "writtenOn": "2013-10-10T16:59:05Z",
      "side": 1,
      "message": "Copyright notice",
      "revId": "7930e5816a61cc520e91a2be84b50d22ab8bbd94",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_05900f94",
        "filename": "opendaylight/samples/simpleforwarding/src/main/java/org/opendaylight/controller/samples/simpleforwarding/internal/SimpleBroadcastHandlerImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 11
      },
      "writtenOn": "2013-10-17T12:57:25Z",
      "side": 1,
      "message": "Same here",
      "revId": "7930e5816a61cc520e91a2be84b50d22ab8bbd94",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_c5e9d71b",
        "filename": "opendaylight/samples/simpleforwarding/src/main/java/org/opendaylight/controller/samples/simpleforwarding/internal/SimpleBroadcastHandlerImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 11
      },
      "writtenOn": "2013-10-17T12:57:25Z",
      "side": 1,
      "message": "How about ARP Requests ?\nThe ARP Handler doesn\u0027t consume the requests, but processes it based on the Subnet configurations.\nShould we continue to process it here ?\nOr the order of packet reception can differ as well.",
      "revId": "7930e5816a61cc520e91a2be84b50d22ab8bbd94",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_a5eee320",
        "filename": "opendaylight/samples/simpleforwarding/src/main/java/org/opendaylight/controller/samples/simpleforwarding/internal/SimpleBroadcastHandlerImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 11
      },
      "writtenOn": "2013-10-17T12:57:25Z",
      "side": 1,
      "message": "This is an AI on the Controller developers (all of us :) ) to make sure the Protocol-plugin does proper filtering of data-packet based on Container\u0027s FlowSpec. The existing TODO in DataPacketMuxDemux code proves that the the broadcast packet received on Container1 WILL get leaked and flooded into Container2.\n\n                            // TODO add filtering on a per-flowSpec base\n                            s.receiveDataPacket(dataPacket);",
      "revId": "7930e5816a61cc520e91a2be84b50d22ab8bbd94",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_dd21cbb5",
        "filename": "opendaylight/samples/simpleforwarding/src/main/java/org/opendaylight/controller/samples/simpleforwarding/internal/SimpleBroadcastHandlerImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 13
      },
      "writtenOn": "2013-10-10T16:59:05Z",
      "side": 1,
      "message": "have you considered calling \ninvSvc.getUpNodeConnectors(Node node)\nit should return you all the ports in link up state for the specified switch and should not include the internal switch port SW.\n\nUnless you are intentionally broadcasting on all the switches. Then, please discard my comment.",
      "revId": "7930e5816a61cc520e91a2be84b50d22ab8bbd94",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_5d36fb04",
        "filename": "opendaylight/samples/simpleforwarding/src/main/java/org/opendaylight/controller/samples/simpleforwarding/internal/SimpleBroadcastHandlerImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 13
      },
      "writtenOn": "2013-10-10T16:59:05Z",
      "side": 1,
      "message": "Why these locking ?\nIn this container where SimpleBroadCast is being instantiated, there will be only one one dep mgr to call the callback set/unset functions.",
      "revId": "7930e5816a61cc520e91a2be84b50d22ab8bbd94",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_45ce0785",
        "filename": "opendaylight/samples/simpleforwarding/src/main/java/org/opendaylight/controller/samples/simpleforwarding/internal/SimpleBroadcastHandlerImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 48
      },
      "writtenOn": "2013-10-24T17:35:43Z",
      "side": 1,
      "message": "This is so that they can\u0027t be pulled out from under us while we\u0027re in the middle of something which would cause an NPE, right?",
      "parentUuid": "da6255ed_5d36fb04",
      "revId": "7930e5816a61cc520e91a2be84b50d22ab8bbd94",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da6255ed_7f48732d",
        "filename": "opendaylight/samples/simpleforwarding/src/main/java/org/opendaylight/controller/samples/simpleforwarding/internal/SimpleBroadcastHandlerImpl.java",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 75
      },
      "writtenOn": "2013-10-24T23:16:23Z",
      "side": 1,
      "message": "It\u0027s probably not a good idea to block a DM thread (the one that executes the dependency callbacks) to wait for an application method.\nSince you need all three services anyway (I don\u0027t see bps used anywhere?) just make them required deps and you won\u0027t need all this unhealthy locking :)\nP.S. In the entire history of this controller I haven\u0027t encountered the problem you\u0027re anticipating here.",
      "parentUuid": "da6255ed_45ce0785",
      "revId": "7930e5816a61cc520e91a2be84b50d22ab8bbd94",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}