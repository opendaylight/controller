{
  "comments": [
    {
      "key": {
        "uuid": "c18e3ec9_7848ad2b",
        "filename": "opendaylight/md-sal/sal-binding-api/src/main/java/org/opendaylight/controller/sal/binding/api/AbstractBrokerAwareActivator.java",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-03-10T02:59:32Z",
      "side": 0,
      "message": "Field not initialized in constructor but dereferenced without null check",
      "revId": "2f05ce3fdd200dccd4a99ae16d1340c72d36ca11",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67f7d4e8_01eb6416",
        "filename": "opendaylight/md-sal/sal-common-util/src/main/java/org/opendaylight/controller/sal/common/util/Rpcs.java",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-03-10T02:59:32Z",
      "side": 0,
      "message": "Non-transient non-serializable instance field in serializable class - RpcError isn\u0027t Serializable. This wouldn\u0027t matter at runtime if the RpcError impl was Serializable but it isn\u0027t. Rather than suppressing it, I just removed Serializable since serialization is broken anyway - also this class is deprecated and hasn\u0027t been used in a while in lieu of the RpcResultBuilder in yangtools, in fact I plan on removing this class.",
      "range": {
        "startLine": 40,
        "startChar": 65,
        "endLine": 40,
        "endChar": 77
      },
      "revId": "2f05ce3fdd200dccd4a99ae16d1340c72d36ca11",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "148ed074_45d6eef7",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMRpcIdentifier.java",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-03-10T02:59:32Z",
      "side": 0,
      "message": "Redundant nullcheck of value known to be non-null",
      "revId": "2f05ce3fdd200dccd4a99ae16d1340c72d36ca11",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e589e85_1107517e",
        "filename": "opendaylight/md-sal/sal-inmemory-datastore/src/main/java/org/opendaylight/controller/md/sal/dom/store/impl/InMemoryDOMDataStore.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-03-10T02:59:32Z",
      "side": 0,
      "message": "Redundant nullcheck of value known to be non-null",
      "revId": "2f05ce3fdd200dccd4a99ae16d1340c72d36ca11",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a68f0985_7922a3da",
        "filename": "opendaylight/md-sal/sal-inmemory-datastore/src/main/java/org/opendaylight/controller/md/sal/dom/store/impl/tree/ListenerNode.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1842
      },
      "writtenOn": "2018-03-10T02:59:32Z",
      "side": 0,
      "message": "Equals checks for incompatible operand",
      "revId": "2f05ce3fdd200dccd4a99ae16d1340c72d36ca11",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67bb103c_536533c9",
        "filename": "opendaylight/md-sal/sal-inmemory-datastore/src/main/java/org/opendaylight/controller/md/sal/dom/store/impl/tree/ListenerNode.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-03-14T21:20:01Z",
      "side": 0,
      "message": "Oups, you fixed a real bug here! It didn\u0027t do obj.delegate before!  As this class is not final, the equals() could be wrong because it would return true for an obj of a subclass that has th same delegate but has additional other fields, so better not use getClass() but ListenerNode.class ?  Or make this final.",
      "parentUuid": "a68f0985_7922a3da",
      "revId": "2f05ce3fdd200dccd4a99ae16d1340c72d36ca11",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}