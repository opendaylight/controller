{
  "comments": [
    {
      "key": {
        "uuid": "ba8cc1f7_583e13ba",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/DataChangeListenerRegistrationProxy.java",
        "patchSetId": 7
      },
      "lineNbr": 106,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-10-24T22:57:33Z",
      "side": 1,
      "message": "Why would findLocalShardAsync result in a PrimaryNotFoundException? Right now I see it thrown only in TransactionProxy#createTransactionIfMissing when findPrimary fails.",
      "revId": "9645e31609582eeec7759aad00e3aa389ddab73c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_b82cff4b",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/DataChangeListenerRegistrationProxy.java",
        "patchSetId": 7
      },
      "lineNbr": 106,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-10-25T00:26:49Z",
      "side": 1,
      "message": "ActorContext#findLocalShardAsync throws it (I added that). I was a little lazy and re-used PrimaryNotFoundException. But it\u0027s not technically correct - I should create a LocalShardNotFoundException - I\u0027ll do that.",
      "parentUuid": "ba8cc1f7_583e13ba",
      "revId": "9645e31609582eeec7759aad00e3aa389ddab73c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_f8bda703",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/Shard.java",
        "patchSetId": 7
      },
      "lineNbr": 219,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-10-24T22:57:33Z",
      "side": 1,
      "message": "Could you explain these changes please?",
      "revId": "9645e31609582eeec7759aad00e3aa389ddab73c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_d831c3a3",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/Shard.java",
        "patchSetId": 7
      },
      "lineNbr": 219,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-10-25T00:26:49Z",
      "side": 1,
      "message": "I added the mechanism in ShardManager to cache and respond later to senders on FindLocalShard when the ActorInitialized message is received from the Shard. So I wanted to guarantee the Shard always sends ActorInitialized when recovery completes, successfully or not. I\u0027m not clear on what the akka behavior is if recovery fails. It may disable the actor so it doesn\u0027t receive any messages. But just in case I added this call, mainly to send the ActorInitialized message but also to start the txCommitTimeoutCheckSchedule. What do you think?",
      "parentUuid": "ba8cc1f7_f8bda703",
      "revId": "9645e31609582eeec7759aad00e3aa389ddab73c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_58e4d30c",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/Shard.java",
        "patchSetId": 7
      },
      "lineNbr": 219,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-10-25T01:27:27Z",
      "side": 1,
      "message": "Apparently if you do not handle RecoveryFailure the actor gets stopped. Since we are handling it the actor will not be stopped but then it might be in an inconsistent state.",
      "parentUuid": "ba8cc1f7_d831c3a3",
      "revId": "9645e31609582eeec7759aad00e3aa389ddab73c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_185f2b10",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/Shard.java",
        "patchSetId": 7
      },
      "lineNbr": 699,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-10-24T22:57:33Z",
      "side": 1,
      "message": "What are we doing here?",
      "revId": "9645e31609582eeec7759aad00e3aa389ddab73c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_982b3b30",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/Shard.java",
        "patchSetId": 7
      },
      "lineNbr": 699,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-10-25T00:26:49Z",
      "side": 1,
      "message": "I assume you mean the null check. This method is now also called if recovery fails. If recovery fails, I\u0027m not sure if akka would also send RecoveryComplete in addition to RecoveryFailed. I wouldn\u0027t think so but I was just trying to cover it in case - we wouldn\u0027t want two txCommitTimeoutCheckSchedules created.",
      "parentUuid": "ba8cc1f7_185f2b10",
      "revId": "9645e31609582eeec7759aad00e3aa389ddab73c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_f8f047cb",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/Shard.java",
        "patchSetId": 7
      },
      "lineNbr": 699,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-10-25T01:27:27Z",
      "side": 1,
      "message": "Sounds good but RecoveryFailure sounds like we have a catastrophic failure. We need to think of an appropriate way to handle that scenario.",
      "parentUuid": "ba8cc1f7_982b3b30",
      "revId": "9645e31609582eeec7759aad00e3aa389ddab73c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_d8bf83cf",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/Shard.java",
        "patchSetId": 7
      },
      "lineNbr": 699,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-10-25T01:59:57Z",
      "side": 1,
      "message": "RecoveryFailure would probably mean the journal is corrupt or we modified serialization in a non-backwards compatible way so we lose the persisted data.",
      "parentUuid": "ba8cc1f7_f8f047cb",
      "revId": "9645e31609582eeec7759aad00e3aa389ddab73c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_18bbab0f",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/utils/ActorContext.java",
        "patchSetId": 7
      },
      "lineNbr": 162,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-10-24T22:57:33Z",
      "side": 1,
      "message": "Should this be another exception like \"LocalShardNotFoundException\"?",
      "revId": "9645e31609582eeec7759aad00e3aa389ddab73c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_3820ef48",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/utils/ActorContext.java",
        "patchSetId": 7
      },
      "lineNbr": 162,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-10-25T00:26:49Z",
      "side": 1,
      "message": "Yes - I will add that. I got lazy and re-used PrimaryNotFoundException :)",
      "parentUuid": "ba8cc1f7_18bbab0f",
      "revId": "9645e31609582eeec7759aad00e3aa389ddab73c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_b8371fb0",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/test/java/org/opendaylight/controller/cluster/datastore/DataChangeListenerRegistrationProxyTest.java",
        "patchSetId": 7
      },
      "lineNbr": 149,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-10-24T22:57:33Z",
      "side": 1,
      "message": "Why not just use expectNoMsg with a duration?",
      "revId": "9645e31609582eeec7759aad00e3aa389ddab73c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_581db30e",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/test/java/org/opendaylight/controller/cluster/datastore/DataChangeListenerRegistrationProxyTest.java",
        "patchSetId": 7
      },
      "lineNbr": 149,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-10-25T00:26:49Z",
      "side": 1,
      "message": "Ah - good idea - didn\u0027t know about that.",
      "parentUuid": "ba8cc1f7_b8371fb0",
      "revId": "9645e31609582eeec7759aad00e3aa389ddab73c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}