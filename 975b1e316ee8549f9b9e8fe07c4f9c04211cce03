{
  "comments": [
    {
      "key": {
        "uuid": "7a96c907_99017e08",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeListener.java",
        "patchSetId": 8
      },
      "lineNbr": 37,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-17T23:45:06Z",
      "side": 1,
      "message": "I\u0027m assuming this would be intended if a shard temporarily loses its leader. In that case, when a shard leader becomes available again, we were thinking about \"re-notifiying\" the listener of the current data as if it had just registered on controller startup (which would notify of persisted data). That way shard failure is transparent to listeners and all listeners aren\u0027t burdened with having to explicitly handling it. This method could be called back in that case but the javadocs here wouldn\u0027t jive.",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_779119f0",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeListener.java",
        "patchSetId": 8
      },
      "lineNbr": 37,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-02-18T16:05:40Z",
      "side": 1,
      "message": "Well... this really is a shutdown-style hook. The listener is really an actor, so a transient problem would result in temporary non-delivery of events. Once leadership is reestablished, this callback would be invoked only if some state loss would prevent the cluster from resuming normal change delivery.",
      "parentUuid": "7a96c907_99017e08",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_977ce5b6",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeListener.java",
        "patchSetId": 8
      },
      "lineNbr": 37,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-18T16:27:54Z",
      "side": 1,
      "message": "OK - instead of requiring the client to unregister, can\u0027t the implementation do it automatically? Essentially this means the listener is done so auto-unregistering seems to make sense.",
      "parentUuid": "7a96c907_779119f0",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_792d92a7",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeProducer.java",
        "patchSetId": 8
      },
      "lineNbr": 51,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-17T23:45:06Z",
      "side": 1,
      "message": "Does true indicate it\u0027s isolated? It seems so but should make that explicit. \nIt seems this is equivalent to chaining. If so, can we call this \"chained\" instead with more explanation of the semantics \"share the same fate\" and \"merged\"? I\u0027m assuming \"merged\" means this tx will immediately \"see\" the writes made by the previous tx.",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_978e25cf",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeProducer.java",
        "patchSetId": 8
      },
      "lineNbr": 51,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-02-18T16:05:40Z",
      "side": 1,
      "message": "Transactions in a producer are always \"chained\". Merging means what PingPong broker does: rolling transactions so that they appear in the background as a single entity. That means that some data change edges (flaps) may disappear -- which is fine for most applications, but intolerable for others.",
      "parentUuid": "7a96c907_792d92a7",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_374dd19a",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeProducer.java",
        "patchSetId": 8
      },
      "lineNbr": 51,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-18T16:27:54Z",
      "side": 1,
      "message": "ok - that clarifies it a bit. Can you include this language in the javadocs? I think it\u0027s important to make it clear the tx\u0027s are automatically chained, as this differs from before, and what that means. \n\nAlso the text talks about \"isolated\" but the param is named \"barrier\". I think it would be more clear to use the same terminology, i.e. name the param \"isolated\".",
      "parentUuid": "7a96c907_978e25cf",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_992ade8e",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeProducer.java",
        "patchSetId": 8
      },
      "lineNbr": 66,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-17T23:45:06Z",
      "side": 1,
      "message": "What is meant by \"appropriate context\"? I assume this means being bound to a listener.",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_37bf1163",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeProducer.java",
        "patchSetId": 8
      },
      "lineNbr": 66,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-02-18T16:05:40Z",
      "side": 1,
      "message": "Yes, appropriate context with regard to the producer being bound or not.",
      "parentUuid": "7a96c907_992ade8e",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_d75d8d48",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeProducer.java",
        "patchSetId": 8
      },
      "lineNbr": 66,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-18T16:27:54Z",
      "side": 1,
      "message": "Can we make that clear? Eg \"invoked in the appropriate context (bounded or unbounded).\"",
      "parentUuid": "7a96c907_37bf1163",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_391b8a82",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeProducer.java",
        "patchSetId": 8
      },
      "lineNbr": 67,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-17T23:45:06Z",
      "side": 1,
      "message": "By \"must be accessible\", what would be a case where it wouldn\u0027t be accessible? I think I know but can you expand on that?",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_57c41df4",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeProducer.java",
        "patchSetId": 8
      },
      "lineNbr": 67,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-02-18T16:05:40Z",
      "side": 1,
      "message": "Accessible means they are a subset of the subtrees specified when the producer is instantiated. The set is further reduced as child producers are instantiated -- if you create a producer for /a and then a child for /a/b, /a/b is not accessible from the first producer.",
      "parentUuid": "7a96c907_391b8a82",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_3734f1fa",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeProducer.java",
        "patchSetId": 8
      },
      "lineNbr": 67,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-18T16:27:54Z",
      "side": 1,
      "message": "Can you include that language?",
      "parentUuid": "7a96c907_57c41df4",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_5920d6ab",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeProducer.java",
        "patchSetId": 8
      },
      "lineNbr": 69,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-17T23:45:06Z",
      "side": 1,
      "message": "Do the specified paths need to be children of the path(s) of then parent producer? A specific use-case example of this method would be helpful.",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_f7b44983",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeProducer.java",
        "patchSetId": 8
      },
      "lineNbr": 69,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-02-18T16:05:40Z",
      "side": 1,
      "message": "Yes they have to. The use case is when a single instance of an application, which produces a topology instance wants to create dedicated per-device producers (to attach to individual sessions).",
      "parentUuid": "7a96c907_5920d6ab",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_57397df1",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeProducer.java",
        "patchSetId": 8
      },
      "lineNbr": 69,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-18T16:27:54Z",
      "side": 1,
      "message": "I think this one really needs an example use case.",
      "parentUuid": "7a96c907_f7b44983",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_b960fa01",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeProducerFactory.java",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-17T23:45:06Z",
      "side": 1,
      "message": "Probably should have class javadocs but that can be done in future patch.",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_f910c25a",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeProducerFactory.java",
        "patchSetId": 8
      },
      "lineNbr": 19,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-17T23:45:06Z",
      "side": 1,
      "message": "This is not a param in the method.\n\"subtrees\" should be doc\u0027ed.",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_f9420267",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeService.java",
        "patchSetId": 8
      },
      "lineNbr": 40,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-17T23:45:06Z",
      "side": 1,
      "message": "\"accessing them\"\"",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_19480e86",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeService.java",
        "patchSetId": 8
      },
      "lineNbr": 42,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-17T23:45:06Z",
      "side": 1,
      "message": "How would this happen if a producer can only used/accessed within the callback?  Is this something the implementation must check for or the client listener? Eg, if a producer wasn\u0027t idle at the time of a trigger, is it the implementation\u0027s job to delay/wait for the producer to become idle before triggering?",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_7c1b4073",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeService.java",
        "patchSetId": 8
      },
      "lineNbr": 50,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-17T23:45:06Z",
      "side": 1,
      "message": "I\u0027m assuming the listener subtrees can completely differ from the producer subtrees, i.e. allowing a listener to write to a separate subtree or even logical store than from which it listens.",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_5952163c",
        "filename": "opendaylight/md-sal/sal-dom-api/src/main/java/org/opendaylight/controller/md/sal/dom/api/DOMDataTreeService.java",
        "patchSetId": 8
      },
      "lineNbr": 52,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-17T23:45:06Z",
      "side": 1,
      "message": "I\u0027m assuming this can be empty.",
      "revId": "975b1e316ee8549f9b9e8fe07c4f9c04211cce03",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}