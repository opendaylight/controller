{
  "comments": [
    {
      "key": {
        "uuid": "1aa4ed85_ea2cc34c",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/Shard.java",
        "patchSetId": 18
      },
      "lineNbr": 135,
      "author": {
        "id": 3172
      },
      "writtenOn": "2015-12-15T23:55:00Z",
      "side": 1,
      "message": "Seems like this is never assigned?  Is that to come in a future patch?",
      "range": {
        "startLine": 135,
        "startChar": 43,
        "endLine": 135,
        "endChar": 59
      },
      "revId": "ccc8ffbf33a0ded40d39713a38c7d6c1480bfdf6",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_4a74f7fc",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/Shard.java",
        "patchSetId": 18
      },
      "lineNbr": 353,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-16T02:02:55Z",
      "side": 1,
      "message": "The DataTreeCandidatePayload will also be persisted. This isn\u0027t going to work. When recovered it will use a new dictionary which may not match the output dictionary. We would also have to persist the dictionary.",
      "revId": "ccc8ffbf33a0ded40d39713a38c7d6c1480bfdf6",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_53026b3f",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/Shard.java",
        "patchSetId": 18
      },
      "lineNbr": 353,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-12-17T13:54:46Z",
      "side": 1,
      "message": "The contents of the dictionary is the sum of all previous messages. Each raft term starts with a clean dictionary, so we can recover it for each term by replaying the messages from the start of the term.\n\nThe only case where I am not certain this is going to work is mid-term snapshots, where the leader would have to send the current dictionary along with the snapshot.\n\nAm I missing something?",
      "parentUuid": "1aa4ed85_4a74f7fc",
      "revId": "ccc8ffbf33a0ded40d39713a38c7d6c1480bfdf6",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_c6a1bbaa",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/Shard.java",
        "patchSetId": 18
      },
      "lineNbr": 353,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-12-17T15:49:34Z",
      "side": 1,
      "message": "Re: journal recovery, currently each DataTreeCandidatePayload would create its own local dictionary (see ShardRecoveryCoordinator::appendRecoveredLogEntry). This doesn\u0027t seem right - it may have a QNAME_REFERENCE whose definition is contained in a previous DataTreeCandidatePayload stream. It seems that an entry must be written to the log indicating to throw away the current dictionary.\n\nI think this is working currently and unit tests are passing b/c of Gary\u0027s comment, i.e. writerDictionary is never set in Shard so each persisted DataTreeCandidatePayload uses its own dictionary, thus reverting to the current behavior.\n\nRe: snapshots, they are self-contained and can/should use their own dictionary (I assume you plan to convert it to use the Be streaming). However a snapshot does clear all prior journal entries so that must be taken into account as there may be unapplied log entries left over. A further complication is that leaders and followers snapshot independently and snapshots can be installed on the follower by the leader. Also a snapshot is now taken after recovery when there are log entries.",
      "parentUuid": "1aa4ed85_53026b3f",
      "revId": "ccc8ffbf33a0ded40d39713a38c7d6c1480bfdf6",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1aa4ed85_f89ec255",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/Shard.java",
        "patchSetId": 18
      },
      "lineNbr": 353,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-12-22T16:06:54Z",
      "side": 1,
      "message": "The instruction to throw away the dictionary is part of the payload stream: the first byte after signature/version indicates whether to retain or clear the dictionary -- that part is addressed in the next revision.\n\nSo adding the contents of the dictionary at the point when snapshot is created should solve this.\n\nWhat are the left over entries -- are they stuff that needs to be applied *after* the snapshot?",
      "parentUuid": "1aa4ed85_c6a1bbaa",
      "revId": "ccc8ffbf33a0ded40d39713a38c7d6c1480bfdf6",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}