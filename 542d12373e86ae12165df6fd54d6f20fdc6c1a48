{
  "comments": [
    {
      "key": {
        "uuid": "7a96c907_ca8066c2",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/identifiers/TransactionIdentifier.java",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 795
      },
      "writtenOn": "2015-03-02T22:14:26Z",
      "side": 1,
      "message": "Wouldn\u0027t it be better to just initialize stringRepresentation in the constructor. I can imagine toString being multiple times and then we\u0027ll have this null check done every time.",
      "revId": "542d12373e86ae12165df6fd54d6f20fdc6c1a48",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_967607a3",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/identifiers/TransactionIdentifier.java",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-03-04T04:00:24Z",
      "side": 1,
      "message": "I didn\u0027t do that so we don\u0027t incur the overhead on the constructor fast patch. Although now I realize that toString will get called anyway on the fast path with debug logging plus we call toString() when sending the CreateTransaction method. So, yes, I can move to the constructor.",
      "parentUuid": "7a96c907_ca8066c2",
      "revId": "542d12373e86ae12165df6fd54d6f20fdc6c1a48",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_56a39fff",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/identifiers/TransactionIdentifier.java",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-03-04T04:17:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a96c907_967607a3",
      "revId": "542d12373e86ae12165df6fd54d6f20fdc6c1a48",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_3d81cf4a",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/identifiers/TransactionIdentifier.java",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-03-04T16:52:50Z",
      "side": 1,
      "message": "Actually debug logging won\u0027t invoke toString unless debug is on and it formats - not sure what I was thinking. Also, while toString() is called when sending the CreateTransaction, that is not on the \"unused\" path. So the way I had it before does avoid the stringRepresentation being created. So that was my motivation. I should put it back - do you agree?\n\nWe could avoid the toString() on CreateTransaction by passing the long ID. I could do that in another patch.",
      "parentUuid": "7a96c907_56a39fff",
      "revId": "542d12373e86ae12165df6fd54d6f20fdc6c1a48",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_001d880f",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/identifiers/TransactionIdentifier.java",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 795
      },
      "writtenOn": "2015-03-04T18:52:41Z",
      "side": 1,
      "message": "I\u0027m more comfortable with creating the string representation once in the constructor - that allows consumers to use toString without having to worry about the consequences.",
      "parentUuid": "5a93c517_3d81cf4a",
      "revId": "542d12373e86ae12165df6fd54d6f20fdc6c1a48",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}