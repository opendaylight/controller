{
  "comments": [
    {
      "key": {
        "uuid": "7a96c907_21afc42b",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/RaftActor.java",
        "patchSetId": 1
      },
      "lineNbr": 693,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-23T06:00:43Z",
      "side": 1,
      "message": "Shouldn\u0027t this pass: \n    captureSnapshot.getLastAppliedIndex(),\n    captureSnapshot.getLastAppliedTerm()\n\ninstead of the current snapshot index and term in the replicated log?\nEg, if the current snapshot index is 1 and the new snapshot index is 2, this will result in the replicated log\u0027s snapshot index being 1 and not 2.",
      "revId": "758835d8045e6fdbee236d69945da75883db5134",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_e17b1cbc",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/RaftActor.java",
        "patchSetId": 1
      },
      "lineNbr": 693,
      "author": {
        "id": 795
      },
      "writtenOn": "2015-02-23T06:25:48Z",
      "side": 1,
      "message": "No. This will result infact in the snapshot index not being changed at all. There are many confusing little things about snapshotting code. I\u0027m refactoring it so that we can better understand what it\u0027s doing. Right now it\u0027s spread around a little bit and is confusing. See later commits.",
      "parentUuid": "7a96c907_21afc42b",
      "revId": "758835d8045e6fdbee236d69945da75883db5134",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_ccbbb70d",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/RaftActor.java",
        "patchSetId": 1
      },
      "lineNbr": 693,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-23T09:26:42Z",
      "side": 1,
      "message": "Hmm - we just captured a snapshot and persisted it yet we don\u0027t advance the cached snapshot index. If that is correct then I\u0027m missing something here - can you clarify it for me? I was writing a RaftActor integration test (with no mock messages) and ran into this... \n\nI agree on the refactoring. RaftActor has become monolithic and messy. It could use additional refactoring as well.",
      "parentUuid": "7a96c907_e17b1cbc",
      "revId": "758835d8045e6fdbee236d69945da75883db5134",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_a780c4c0",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/RaftActor.java",
        "patchSetId": 1
      },
      "lineNbr": 693,
      "author": {
        "id": 795
      },
      "writtenOn": "2015-02-23T18:54:18Z",
      "side": 1,
      "message": "There are 2 parts to snapshotting,\na. Saving an akka persistence snapshot so that we can recover from disk\nb. Trimming the in-memory log and setting the snapshotIndex on the log. The snapshotIndex allows us to create the logical index for a log entry (in code it\u0027s called the adjusted index)\n\nWhile we coordinate the two they are not really dependent on each other which is evidenced by the fact that we do fake snapshotting where we trim the log without actually saving the snapshot to disk.\n\nThis code get\u0027s invoked when doing real snapshotting. A real snapshot happens when we reach the batch count or when we are low on memory. It get\u0027s triggered when we append an entry to the log. Since we introduced the replicatedToAllIndex we try to trim the in-memory log based on the replicatedToAllIndex. The replicatedToAllIndex is always behind lastApplied because lastApplied moves forward even when all the replicas do not have an index. So when we are low on memory we still trim the in-memory log based on the lastApplied index. \n\nSo now we come to the case where I encountered  this bug. It happens if replicateToAllIndex is -1 which happens iff replicatedToAllIndex \u003d\u003d -1 or replicatedToAllIndex is not found in the log. It replicatedToAllIndex is not in the log then it means that it has to be in the snapshot. That is why I do the snapshotPrecommit without advancing the snapshotIndex because it\u0027s already where it\u0027s supposed to be.",
      "parentUuid": "7a96c907_ccbbb70d",
      "revId": "758835d8045e6fdbee236d69945da75883db5134",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}