{
  "comments": [
    {
      "key": {
        "uuid": "7a96c907_e60c84ef",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/SnapshotState.java",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1676
      },
      "writtenOn": "2015-02-27T08:42:10Z",
      "side": 1,
      "message": "It would be beneficial to describe the relevance of this param (procedure) passed while  creating a snapshot",
      "revId": "358d8b4d1cfbc5d4f709eed0d277914e4b763794",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_066ad080",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/SnapshotManager.java",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1676
      },
      "writtenOn": "2015-02-27T08:42:10Z",
      "side": 1,
      "message": "I dont think it would be illegal to call captureToInstall if the currentState is not Idle\n\nConsider a scenario, when another follower wants an install, when a current capture is in-progress.\n\nSo we might want to log it as info but not an error.",
      "revId": "358d8b4d1cfbc5d4f709eed0d277914e4b763794",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_a60f5c87",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/SnapshotManager.java",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-27T13:07:38Z",
      "side": 1,
      "message": "I think you\u0027re right -  there could be an issue as follows:\n\n  - snapshot capture is initiated by replication\n\n  - after CaptureSnapshotReply, we transition to the Persisted state\n\n  - on next replication, the payload is large enough to exceed the memory threshold. Or sendAppendEntries determines it needs to install a snapshot on a follower  \n\n  - Either way it will call isCapturing(). Persisted will return false so the caller will call capture which would blow up.\n\nSo we can theoretically be persisting one snapshot while capturing another. Not saying we want back-to-back snapshots but it\u0027s possible. It seems we need to allow capture in Persisted as well. Calling capture in Capturing or Created should be illegal.",
      "parentUuid": "7a96c907_066ad080",
      "revId": "358d8b4d1cfbc5d4f709eed0d277914e4b763794",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_a6a8bcdb",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/SnapshotManager.java",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-27T07:19:30Z",
      "side": 1,
      "message": "Can we just let the AbstractSnapshotState handle the illegal call to make cleaner?   AbstractSnapshotState could include the message in the exception. Same with other calls below.",
      "revId": "358d8b4d1cfbc5d4f709eed0d277914e4b763794",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_c60708c9",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/SnapshotManager.java",
        "patchSetId": 3
      },
      "lineNbr": 100,
      "author": {
        "id": 1676
      },
      "writtenOn": "2015-02-27T08:42:10Z",
      "side": 1,
      "message": "Didnt get why we are allowing the trimming of log when the state is Persisting\n\nDuring a rollback, we do swap the journals and the snapshot index.\n\nAs i gather, till the state changes from Persisting to Idle, a snapshot is not done and is in progress.",
      "revId": "358d8b4d1cfbc5d4f709eed0d277914e4b763794",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_4698d8bf",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/SnapshotManager.java",
        "patchSetId": 3
      },
      "lineNbr": 150,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-27T07:19:30Z",
      "side": 1,
      "message": "I think it would be good to include a text message with these exceptions as I commented above.",
      "revId": "358d8b4d1cfbc5d4f709eed0d277914e4b763794",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_061e50bb",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/SnapshotManager.java",
        "patchSetId": 3
      },
      "lineNbr": 179,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-27T13:07:38Z",
      "side": 1,
      "message": "We could reuse a LastAppliedTermInformationReader instance here to save an object creation. Instead of creating a new one, call an init method. Same with ReplicatedToAllTermInformationReader below.",
      "revId": "358d8b4d1cfbc5d4f709eed0d277914e4b763794",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_268b4c69",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/SnapshotManager.java",
        "patchSetId": 3
      },
      "lineNbr": 252,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-27T07:19:30Z",
      "side": 1,
      "message": "I think we want this state to return true from isCapturing since we\u0027re not done capturing until we\u0027ve gotten the CaptureSnapshotReply. Previously the snapshotCaptureInitiated flag was cleared by handleCaptureSnapshotReply.",
      "revId": "358d8b4d1cfbc5d4f709eed0d277914e4b763794",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_86f10003",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/SnapshotManager.java",
        "patchSetId": 3
      },
      "lineNbr": 268,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-27T07:19:30Z",
      "side": 1,
      "message": "I put the totalMemory() call in a protected method in RaftActor so I could override in my tests to cause a snapshot. I\u0027ll have to figure out something here.",
      "range": {
        "startLine": 268,
        "startChar": 33,
        "endLine": 268,
        "endChar": 63
      },
      "revId": "358d8b4d1cfbc5d4f709eed0d277914e4b763794",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a96c907_46df7869",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/SnapshotManager.java",
        "patchSetId": 3
      },
      "lineNbr": 373,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-02-27T07:19:30Z",
      "side": 1,
      "message": "It looks like this else check and block is for the call from AbstractLeader for a follower install snapshot. How will this behave when called from RaftActor for a replication snapshot? Would this be a no-op?",
      "revId": "358d8b4d1cfbc5d4f709eed0d277914e4b763794",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}