{
  "comments": [
    {
      "key": {
        "uuid": "3aa0d159_eff2826e",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/DirectCommitCohort.java",
        "patchSetId": 22
      },
      "lineNbr": 61,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-06T04:35:04Z",
      "side": 1,
      "message": "I think we should set the exception on canCommit as well so we propagate the failure to the front-end. Otherwise the front-end will see FALSE and not proceed to preCommit/commit so the backend failure won\u0027t be reported. Also if canCommit fails, the front-end will try to abort so we might want to return a successful future from abort so we don\u0027t report an unnecessary failure.",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_afba3a6c",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/LocalThreePhaseCommitCohort.java",
        "patchSetId": 22
      },
      "lineNbr": 95,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-06T04:35:04Z",
      "side": 1,
      "message": "Why don\u0027t we return the messageFuture?",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_2ff4e3f0",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/LocalThreePhaseCommitCohort.java",
        "patchSetId": 22
      },
      "lineNbr": 95,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-05-07T11:01:03Z",
      "side": 1,
      "message": "Because that would be used by the frontend chain code to actually wait for response from the shard leader, which is completely unnecessary.\n\nLocal transactions do not have any remote state associated while they are open. This codepath (unlike initiateCoordinatedCommit()) does not create any remote state during the commit process.",
      "parentUuid": "3aa0d159_afba3a6c",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_c000b303",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/PreLithiumTransactionReadyReplyMapper.java",
        "patchSetId": 22
      },
      "lineNbr": 8,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-06T04:35:04Z",
      "side": 1,
      "message": "This should be in the compat package.",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_0f7327e8",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/PreLithiumTransactionReadyReplyMapper.java",
        "patchSetId": 22
      },
      "lineNbr": 8,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-05-07T11:01:03Z",
      "side": 1,
      "message": "That will force TransactionReadyMapper to become public, though.",
      "parentUuid": "3aa0d159_c000b303",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_7a62a7ae",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/PreLithiumTransactionReadyReplyMapper.java",
        "patchSetId": 22
      },
      "lineNbr": 8,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-07T12:22:56Z",
      "side": 1,
      "message": "That\u0027s fine. Doesn\u0027t hurt anything. It\u0027s a reasonable trade-off - I\u0027d rather the pre-lithium classes be in compat - that\u0027s what we\u0027ve been doing and would make it consistent with the other ones.",
      "parentUuid": "3aa0d159_0f7327e8",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_fa59d75b",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/PreLithiumTransactionReadyReplyMapper.java",
        "patchSetId": 22
      },
      "lineNbr": 8,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-05-07T15:01:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3aa0d159_7a62a7ae",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_6f73d2e7",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/SimpleTransactionComponentFactory.java",
        "patchSetId": 22
      },
      "lineNbr": 27,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-06T04:35:04Z",
      "side": 1,
      "message": "\"Simple\"  - what would be a \"Complex\" one? :)  This reminds me of a guy I used to work with that called just about every impl class Simple even if it had hundreds of lines of code - we got a kick out of that.  Anyway - could call it Default but it\u0027s fine either way.",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_7a670726",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/SimpleTransactionComponentFactory.java",
        "patchSetId": 22
      },
      "lineNbr": 27,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-05-07T15:01:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3aa0d159_6f73d2e7",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_0f824e94",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/SimpleTransactionComponentFactory.java",
        "patchSetId": 22
      },
      "lineNbr": 28,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-06T04:35:04Z",
      "side": 1,
      "message": "I recall you meant \"field\".",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_1a6e0302",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/SimpleTransactionComponentFactory.java",
        "patchSetId": 22
      },
      "lineNbr": 28,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-05-07T15:01:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3aa0d159_0f824e94",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_af3f9ad5",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/SimpleTransactionComponentFactory.java",
        "patchSetId": 22
      },
      "lineNbr": 74,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-06T04:35:04Z",
      "side": 1,
      "message": "I\u0027m usually not a fan of synchronized methods. They inherently increase the amount of unneeded code in the sync block, particularly if more code is added in the future. Plus it isn\u0027t clear exactly what you\u0027re trying to guard. Plus callers could synchronize on it as well as other methods in this class for different purposed causing unwanted contention . I\u0027d prefer to synchronize childChains.",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_7a4e2798",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/SimpleTransactionComponentFactory.java",
        "patchSetId": 22
      },
      "lineNbr": 74,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-05-07T15:01:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3aa0d159_af3f9ad5",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_6f2192b3",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/SimpleTransactionComponentFactory.java",
        "patchSetId": 22
      },
      "lineNbr": 89,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-06T04:35:04Z",
      "side": 1,
      "message": "This is a case where a synchronized method casts too broad a net. We don\u0027t need nor want super.onShardInfoUpdated synchronized.",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_9a81b391",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/SimpleTransactionComponentFactory.java",
        "patchSetId": 22
      },
      "lineNbr": 89,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-05-07T15:01:06Z",
      "side": 1,
      "message": "Unfortunately we do. The reason is that otherwise the order of operations reported to the users (via onShardInfoUpdated()) and how they are applied to the cache (via the call here) could be reordered.\n\nIf we synchronized just the for-loop, thread scheduling after could cause this line to be executed after a different thread would run through.",
      "parentUuid": "3aa0d159_6f2192b3",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_cf19c689",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/TransactionComponentFactory.java",
        "patchSetId": 22
      },
      "lineNbr": 32,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-06T04:35:04Z",
      "side": 1,
      "message": "Since this is abstract we should prepend Abstract to keep it consistent with other classes.",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_9a58d357",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/TransactionComponentFactory.java",
        "patchSetId": 22
      },
      "lineNbr": 32,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-05-07T15:01:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3aa0d159_cf19c689",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_2502c90b",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/utils/ActorContext.java",
        "patchSetId": 22
      },
      "lineNbr": 113,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-06T04:35:04Z",
      "side": 1,
      "message": "This along with primaryShardInfoCache should be in another class but we can refactor that later.",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_85139d65",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/utils/ActorContext.java",
        "patchSetId": 22
      },
      "lineNbr": 248,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-06T04:35:04Z",
      "side": 1,
      "message": "Synchronize shardInfoListeners instead of this.",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_da25fbc2",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/utils/ActorContext.java",
        "patchSetId": 22
      },
      "lineNbr": 248,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-05-07T15:01:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3aa0d159_85139d65",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_a516d953",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/utils/ActorContext.java",
        "patchSetId": 22
      },
      "lineNbr": 250,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-06T04:35:04Z",
      "side": 1,
      "message": "Would be better to gather the listener list inside the sync block and notify outside of it.",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_9a2f73a1",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/utils/ActorContext.java",
        "patchSetId": 22
      },
      "lineNbr": 250,
      "author": {
        "id": 649
      },
      "writtenOn": "2015-05-07T15:01:06Z",
      "side": 1,
      "message": "I do not want to over-engineer this at right now. The problem is that notification has to be synchronized with both register and unregister operations, as we rely on this with cache coherence. The unregister part is relatively straightforward, it\u0027s the register part which is hard -- we do not want the registration to succeed in while another thread is dispatching events, as that could cause missed shootdowns.",
      "parentUuid": "3aa0d159_a516d953",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa0d159_05078d1d",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/utils/ActorContext.java",
        "patchSetId": 22
      },
      "lineNbr": 599,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-06T04:35:04Z",
      "side": 1,
      "message": "Should notify listeners outside the sync block.",
      "revId": "a569e0dc994624b35c6ac3fda024d9634dd7e941",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}