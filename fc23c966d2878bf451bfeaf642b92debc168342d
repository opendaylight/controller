{
  "comments": [
    {
      "key": {
        "uuid": "fa82b9bf_6c024471",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/cluster/common/actor/AbstractMeteredUntypedActor.java",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 1903
      },
      "writtenOn": "2014-09-03T20:35:10Z",
      "side": 1,
      "message": "need to add explicitly?",
      "revId": "fc23c966d2878bf451bfeaf642b92debc168342d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_4c43c06c",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/cluster/common/actor/AbstractMeteredUntypedActor.java",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 807
      },
      "writtenOn": "2014-09-03T22:20:59Z",
      "side": 1,
      "message": "No its not needed. I think I had constructor with arguments earlier.\nI will remove it.",
      "parentUuid": "fa82b9bf_6c024471",
      "revId": "fc23c966d2878bf451bfeaf642b92debc168342d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_bfbcf007",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/cluster/common/actor/AbstractMeteredUntypedActor.java",
        "patchSetId": 8
      },
      "lineNbr": 32,
      "author": {
        "id": 807
      },
      "writtenOn": "2014-09-03T23:44:58Z",
      "side": 1,
      "message": "I can add one.",
      "parentUuid": "fa82b9bf_0c24d8c4",
      "revId": "fc23c966d2878bf451bfeaf642b92debc168342d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_5f45a415",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/cluster/common/actor/AbstractMeteredUntypedActor.java",
        "patchSetId": 8
      },
      "lineNbr": 36,
      "author": {
        "id": 807
      },
      "writtenOn": "2014-09-03T23:44:58Z",
      "side": 1,
      "message": "This configuration is enabled via config subsystem. Config subsystem recreates the module when ever a configuration is changed.\nisMetricsCaptureEnabled() looks into actor system\u0027s config which is in memory. akka.conf is read only once while creating the actor system.",
      "parentUuid": "fa82b9bf_9f032c0d",
      "revId": "fc23c966d2878bf451bfeaf642b92debc168342d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_5feb64b0",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/cluster/common/actor/AbstractMeteredUntypedActor.java",
        "patchSetId": 8
      },
      "lineNbr": 36,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-09-04T01:26:31Z",
      "side": 1,
      "message": "While it is looking up in memory, there\u0027s still overhead there, including converting to a boolean. Since this will be incurred on every message, I think it would be best to store once in a boolean since it won\u0027t change dynamically.",
      "parentUuid": "fa82b9bf_5f45a415",
      "revId": "fc23c966d2878bf451bfeaf642b92debc168342d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_bf9150f3",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/cluster/common/actor/MeteredBoundedMailbox.java",
        "patchSetId": 8
      },
      "lineNbr": 37,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-09-04T01:26:31Z",
      "side": 1,
      "message": "It seems this matches the config param set by ModuleConfig. Can this be made public and referenced by ModuleConfig?",
      "revId": "fc23c966d2878bf451bfeaf642b92debc168342d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_ff87d8b4",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/cluster/common/actor/MeteredBoundedMailbox.java",
        "patchSetId": 8
      },
      "lineNbr": 42,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-09-04T01:26:31Z",
      "side": 1,
      "message": "I know this is preexisting but this should use the CAPACITY constant.",
      "revId": "fc23c966d2878bf451bfeaf642b92debc168342d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_ccf03094",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/Shard.java",
        "patchSetId": 8
      },
      "lineNbr": 176,
      "author": {
        "id": 1903
      },
      "writtenOn": "2014-09-03T20:35:10Z",
      "side": 1,
      "message": "This same code is there in AbstractMeteredUntypedActor, Can we put them at single location?",
      "revId": "fc23c966d2878bf451bfeaf642b92debc168342d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_ac992c21",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/Shard.java",
        "patchSetId": 8
      },
      "lineNbr": 176,
      "author": {
        "id": 807
      },
      "writtenOn": "2014-09-03T22:20:59Z",
      "side": 1,
      "message": "I wanted to but....\nShard class hierarchy (Shard -\u003e RaftActor -\u003e ) is different than AbstractMeteredUntypedActor( Abs*Metered* -\u003e AbstractUntypedActor -\u003e UntypedActor). \nI didnt want metering capability to be inherited by all actors but only specific ones. Eg: Transient actors (Transaction ones) does need to be metered.\n\nIt would have been easier if Java 7 had interfaces with default method :-) \n\nLet me know if you have any ideas on this.",
      "parentUuid": "fa82b9bf_ccf03094",
      "revId": "fc23c966d2878bf451bfeaf642b92debc168342d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_dffe94ae",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/Shard.java",
        "patchSetId": 8
      },
      "lineNbr": 176,
      "author": {
        "id": 807
      },
      "writtenOn": "2014-09-03T23:44:58Z",
      "side": 1,
      "message": "On 1, the actors which will implement the interface will be duplicating the code.\n\nOn 2, I could move isMetricsCaptureEnabled() into a utility. I didnt because, well, its a small method and I didnt want to create a class for just one method. Also, it will be used by only 2 classes(Shard and AbstractMeteredUntypedActor). \ntimedReceive() encapsulates receive(). If we have to move it out, we need to implement some closure like class so that external timedReceive() can call receive(). It can be complicated and make code harder to read.\n\nWhat do you think?",
      "parentUuid": "fa82b9bf_df46944f",
      "revId": "fc23c966d2878bf451bfeaf642b92debc168342d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_1f507c5d",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/Shard.java",
        "patchSetId": 8
      },
      "lineNbr": 176,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-09-04T01:26:31Z",
      "side": 1,
      "message": "I agree. We could create a MeteredActorAdapter class that takes the Actor instance and then delegate onReceiveCommand to the adapter, eg.\n\ninterface MeteredActor {\n    void handleReceive(Object message);\n}\n\npublic class MeteredActorAdapter {\n    private final MeteredActor meteredActor;\n    private final boolean meteringEnabled;\n    private String actorName;\n\n    ....\n   public void onReceiveCommand(Object message) {\n       if(meteringEnabled) {\n           timedReceive(message);\n       } else {\n           actor. handleReceive(message);\n       }\n   }\n}\n\nIn Shard and AbstractMeteredUntypedActor (implement MeteredActor),\n\nprivate final MeteredActorAdapter adapter;\n\npublic void onReceiveCommand(Object message) {\n     adapter.onReceiveCommand(message);\n}",
      "parentUuid": "fa82b9bf_df71b445",
      "revId": "fc23c966d2878bf451bfeaf642b92debc168342d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_7f2bc833",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/Shard.java",
        "patchSetId": 8
      },
      "lineNbr": 389,
      "author": {
        "id": 807
      },
      "writtenOn": "2014-09-03T23:44:58Z",
      "side": 1,
      "message": "As I replied on the earlier comment, the config is in memory and read only once from file during actor creation.",
      "parentUuid": "fa82b9bf_7f73c8b4",
      "revId": "fc23c966d2878bf451bfeaf642b92debc168342d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_9fcb2c1e",
        "filename": "opendaylight/md-sal/sal-remoterpc-connector/src/main/java/org/opendaylight/controller/config/yang/config/remote_rpc_connector/RemoteRPCBrokerModule.java",
        "patchSetId": 8
      },
      "lineNbr": 29,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-09-04T01:26:31Z",
      "side": 1,
      "message": "Shouldn\u0027t we also call mailboxCapacity to transfer the config XML setting?",
      "revId": "fc23c966d2878bf451bfeaf642b92debc168342d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_1f739ce8",
        "filename": "opendaylight/md-sal/sal-remoterpc-connector/src/main/java/org/opendaylight/controller/remote/rpc/ModuleConfig.java",
        "patchSetId": 8
      },
      "lineNbr": 139,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-09-04T01:26:31Z",
      "side": 1,
      "message": "I didn\u0027t see where getAskDuration is being called. I assume this is intended to be used by RpcBroker and RemoteRpcImplementation... is this coming in a later patch? \n\nAlso, I\u0027d suggest creating the FiniteDuration instance and caching to avoid any lookup and parsing overhead to obtain the duration.",
      "revId": "fc23c966d2878bf451bfeaf642b92debc168342d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa82b9bf_df7c54b8",
        "filename": "opendaylight/md-sal/sal-remoterpc-connector/src/main/java/org/opendaylight/controller/remote/rpc/ModuleConfig.java",
        "patchSetId": 8
      },
      "lineNbr": 143,
      "author": {
        "id": 1842
      },
      "writtenOn": "2014-09-04T01:26:31Z",
      "side": 1,
      "message": "Note: getAwaitDuration won\u0027t be needed as soon as https://git.opendaylight.org/gerrit/#/c/10443/ is merged (no more blocking calls).",
      "revId": "fc23c966d2878bf451bfeaf642b92debc168342d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}