{
  "comments": [
    {
      "key": {
        "uuid": "1a9dcd25_0f4b5e5a",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/RaftActor.java",
        "patchSetId": 7
      },
      "lineNbr": 351,
      "author": {
        "id": 795
      },
      "writtenOn": "2015-05-21T01:56:50Z",
      "side": 1,
      "message": "I\u0027m nervous about this change. The commit index and last applied are changed and the entry will be removed from the log even before it is applied to state.  This may come to bite us. It would be better to take everything in the apply block and schedule it for processing in a separate internal message.",
      "revId": "90edee78c7993d619f9933fa002aa3d431006781",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_2fb65a3e",
        "filename": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/RaftActor.java",
        "patchSetId": 7
      },
      "lineNbr": 351,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-21T02:40:41Z",
      "side": 1,
      "message": "I could do that but it looks like we do the same thing for AppendEntriesReply when we replicate. We set commit index and last applied and possibly trim the log directly then send the ApplyState message(s). This looks to be no different.",
      "parentUuid": "1a9dcd25_0f4b5e5a",
      "revId": "90edee78c7993d619f9933fa002aa3d431006781",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_8c445c75",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/DatastoreContext.java",
        "patchSetId": 7
      },
      "lineNbr": 39,
      "author": {
        "id": 795
      },
      "writtenOn": "2015-05-21T01:56:50Z",
      "side": 1,
      "message": "Why do the commit queue capacity and the commit cache expiry timeout have to be set so high? Does it have anything to do with the fix?",
      "revId": "90edee78c7993d619f9933fa002aa3d431006781",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_8f7c4e74",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/DatastoreContext.java",
        "patchSetId": 7
      },
      "lineNbr": 39,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-21T02:40:41Z",
      "side": 1,
      "message": "The cache expiry time was 5 min but it was only used to expire the cache. Now it\u0027s used to also expire the queue. An edge case is if we get a ready but then don\u0027t get the canCommit (remote node lost connection or crashed). This would now delay subsequent pending commits in the queue. We really should get the canCommit quickly after ready - even 2 min is probably too high. It\u0027s hard to know what a good default is for this type of knob.\n\nBecause we could delay pending queued commits up to 2 min, we may get a lot of them backed up under load. I\u0027m trying to give it a reasonable cushion. Again tough to know what\u0027s reasonable w/o empirical data. I\u0027m guessing memory-wise we could manage a pretty large queue but of course we don\u0027t want it too big and run OOM. I could make it 50K. What do you think?",
      "parentUuid": "1a9dcd25_8c445c75",
      "revId": "90edee78c7993d619f9933fa002aa3d431006781",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_4c5e5447",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/RemoteTransactionContextSupport.java",
        "patchSetId": 7
      },
      "lineNbr": 201,
      "author": {
        "id": 795
      },
      "writtenOn": "2015-05-21T01:56:50Z",
      "side": 1,
      "message": "I\u0027m assuming this is an unrelated change as well?",
      "revId": "90edee78c7993d619f9933fa002aa3d431006781",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_af258aac",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/ShardCommitCoordinator.java",
        "patchSetId": 7
      },
      "lineNbr": 409,
      "author": {
        "id": 795
      },
      "writtenOn": "2015-05-21T01:56:50Z",
      "side": 1,
      "message": "we could get rid of this method - it\u0027s not doing much more than getAndRemove",
      "revId": "90edee78c7993d619f9933fa002aa3d431006781",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_af810a4c",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/ShardCommitCoordinator.java",
        "patchSetId": 7
      },
      "lineNbr": 409,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-21T02:40:41Z",
      "side": 1,
      "message": "I can remove it - it\u0027s only called internally anyway",
      "parentUuid": "1a9dcd25_af258aac",
      "revId": "90edee78c7993d619f9933fa002aa3d431006781",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_0f1d9e66",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/ShardCommitCoordinator.java",
        "patchSetId": 7
      },
      "lineNbr": 488,
      "author": {
        "id": 795
      },
      "writtenOn": "2015-05-21T01:56:50Z",
      "side": 1,
      "message": "So this patch fixes bug 3028 as well :)",
      "revId": "90edee78c7993d619f9933fa002aa3d431006781",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_4f964696",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/ShardCommitCoordinator.java",
        "patchSetId": 7
      },
      "lineNbr": 488,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-21T02:40:41Z",
      "side": 1,
      "message": "Yup - a Stopwatch fit nicely for these changes and as a side effect also takes care of that bug.",
      "parentUuid": "1a9dcd25_0f1d9e66",
      "revId": "90edee78c7993d619f9933fa002aa3d431006781",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}