{
  "comments": [
    {
      "key": {
        "uuid": "ba8cc1f7_950ea433",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/stream/DDSNormalizedNodeStreamReader.java",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-10-24T02:22:24Z",
      "side": 1,
      "message": "I think the better package for this would be org.opendaylight.controller.cluster.datastore.node.utils.stream so that it is at the same level as the serialization",
      "revId": "98c509b174cc1752596a61c44469a4ecf642ccd9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_3513185e",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/stream/DDSNormalizedNodeStreamReader.java",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-10-24T02:22:24Z",
      "side": 1,
      "message": "Why create this private method to int the reader? Why not just do in the constructor?",
      "revId": "98c509b174cc1752596a61c44469a4ecf642ccd9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_55101c4e",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/stream/DDSNormalizedNodeStreamReader.java",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-10-24T02:22:24Z",
      "side": 1,
      "message": "Why is the spacing off?",
      "revId": "98c509b174cc1752596a61c44469a4ecf642ccd9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_f51cd06c",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/stream/DDSNormalizedNodeStreamReader.java",
        "patchSetId": 4
      },
      "lineNbr": 101,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-10-24T02:22:24Z",
      "side": 1,
      "message": "comment out of sync",
      "revId": "98c509b174cc1752596a61c44469a4ecf642ccd9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_151a946e",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/stream/DDSNormalizedNodeStreamReader.java",
        "patchSetId": 4
      },
      "lineNbr": 105,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-10-24T02:22:24Z",
      "side": 1,
      "message": "I think these debug log statements are a bit too much. Do we really need them in here?",
      "revId": "98c509b174cc1752596a61c44469a4ecf642ccd9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_d52bcc80",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/stream/DDSNormalizedNodeStreamReader.java",
        "patchSetId": 4
      },
      "lineNbr": 209,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-10-24T02:22:24Z",
      "side": 1,
      "message": "How about avoiding the overhead of isNumeric and valueOf by writing a boolean to the stream which tells if the namespace is a number or not?",
      "revId": "98c509b174cc1752596a61c44469a4ecf642ccd9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_b52648b9",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/stream/DDSNormalizedNodeStreamReader.java",
        "patchSetId": 4
      },
      "lineNbr": 216,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-10-24T02:22:24Z",
      "side": 1,
      "message": "QName creation is expensive because the constructor parses the namespace as a URI and the revision as a Date. To avoid this creation overhead I created the QNameFactory. You need to pass a string to create the QName with the QNameFactory. I believe formatting that string will be cheaper than parsing the namespace and revision (PathArgumentSerializer#qNameToString)",
      "revId": "98c509b174cc1752596a61c44469a4ecf642ccd9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_952544ad",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/stream/DDSNormalizedNodeStreamReader.java",
        "patchSetId": 4
      },
      "lineNbr": 244,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-10-24T02:22:24Z",
      "side": 1,
      "message": "You should use a switch here - would be more optimal\n\nswitch(ValueType.values[objectType]) {\n}\n\nsee ValueSerializer.",
      "revId": "98c509b174cc1752596a61c44469a4ecf642ccd9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_353a38ce",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/stream/DDSNormalizedNodeStreamReader.java",
        "patchSetId": 4
      },
      "lineNbr": 303,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-10-24T02:22:24Z",
      "side": 1,
      "message": "use switch instead of if-else",
      "revId": "98c509b174cc1752596a61c44469a4ecf642ccd9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_5537bce3",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/stream/DDSNormalizedNodeStreamReader.java",
        "patchSetId": 4
      },
      "lineNbr": 323,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-10-24T02:22:24Z",
      "side": 1,
      "message": "The next 4 methods have repetitive code. I think all these builders extend NormalizedNodeContainerBuilder which has an addChild method see if using that helps reduce this repetitive code.",
      "revId": "98c509b174cc1752596a61c44469a4ecf642ccd9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba8cc1f7_f53370f4",
        "filename": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/stream/DDSNormalizedNodeStreamWriter.java",
        "patchSetId": 4
      },
      "lineNbr": 228,
      "author": {
        "id": 795
      },
      "writtenOn": "2014-10-24T02:22:24Z",
      "side": 1,
      "message": "I\u0027m wondering if you could save yourself this code by just using Iterables.size()?",
      "revId": "98c509b174cc1752596a61c44469a4ecf642ccd9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}