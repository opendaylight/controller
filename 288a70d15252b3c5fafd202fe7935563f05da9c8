{
  "comments": [
    {
      "key": {
        "uuid": "7aade967_f2536d6a",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/DatastoreSnapshotRestore.java",
        "patchSetId": 12
      },
      "lineNbr": 57,
      "author": {
        "id": 3172
      },
      "writtenOn": "2015-11-16T18:47:16Z",
      "side": 1,
      "message": "Does initialize() need to be synchronized?  I see the AtomicBoolean being checked, but since it\u0027s being set at the beginning of the method it doesn\u0027t seem to prevent another thread from plowing forward thinking that the instance was already fully initialized when the first thread is only partially through this method.",
      "revId": "288a70d15252b3c5fafd202fe7935563f05da9c8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7aade967_32d105ce",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/DatastoreSnapshotRestore.java",
        "patchSetId": 12
      },
      "lineNbr": 57,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-11-16T18:53:13Z",
      "side": 1,
      "message": "compareAndSet is atomic so only the thread that sees the transition edge from false to true will proceed with initialization.",
      "parentUuid": "7aade967_f2536d6a",
      "revId": "288a70d15252b3c5fafd202fe7935563f05da9c8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7aade967_92f31973",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/DatastoreSnapshotRestore.java",
        "patchSetId": 12
      },
      "lineNbr": 57,
      "author": {
        "id": 3172
      },
      "writtenOn": "2015-11-16T19:03:40Z",
      "side": 1,
      "message": "What I meant was: if there are two concurrent calls to getAndRemove(), could one of them end up with incomplete initialization because while one thread is still doing work in initialize(), the other will skip initialize() due to the AtomicBoolean having already been set to true despite the initialization still being in progress?",
      "parentUuid": "7aade967_32d105ce",
      "revId": "288a70d15252b3c5fafd202fe7935563f05da9c8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7aade967_b24df5c6",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/config/yang/config/distributed_datastore_provider/DistributedConfigDataStoreProviderModule.java",
        "patchSetId": 12
      },
      "lineNbr": 76,
      "author": {
        "id": 3172
      },
      "writtenOn": "2015-11-16T18:47:16Z",
      "side": 1,
      "message": "Is it guaranteed that DatastoreSnapshotRestore.instance() will have already been initialized here?  I\u0027m not familiar with where such dependencies are specified.",
      "revId": "288a70d15252b3c5fafd202fe7935563f05da9c8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7aade967_52d601c7",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/config/yang/config/distributed_datastore_provider/DistributedConfigDataStoreProviderModule.java",
        "patchSetId": 12
      },
      "lineNbr": 76,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-11-16T18:53:13Z",
      "side": 1,
      "message": "The first call to getAndRemove initializes it.",
      "parentUuid": "7aade967_b24df5c6",
      "revId": "288a70d15252b3c5fafd202fe7935563f05da9c8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7aade967_f2012d3a",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/config/yang/config/distributed_datastore_provider/DistributedConfigDataStoreProviderModule.java",
        "patchSetId": 12
      },
      "lineNbr": 76,
      "author": {
        "id": 3172
      },
      "writtenOn": "2015-11-16T19:03:40Z",
      "side": 1,
      "message": "What I meant was: is the Activator that calls DatastoreSnapshotRestore.createInstance() guaranteed to have already been run before this module gets loaded?",
      "parentUuid": "7aade967_52d601c7",
      "revId": "288a70d15252b3c5fafd202fe7935563f05da9c8",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}