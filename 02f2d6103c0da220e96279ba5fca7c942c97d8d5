{
  "comments": [
    {
      "key": {
        "uuid": "9a3d3df0_32abc71e",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/identifiers/TransactionIdentifier.java",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 649
      },
      "writtenOn": "2016-02-04T10:35:21Z",
      "side": 1,
      "message": "This is calendar time, so subject to moving backwards. I don\u0027t think we should rely on time here, but rather have a way of resyncing client/server counters.",
      "revId": "02f2d6103c0da220e96279ba5fca7c942c97d8d5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_95727dab",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/identifiers/TransactionIdentifier.java",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1842
      },
      "writtenOn": "2016-02-04T11:50:18Z",
      "side": 1,
      "message": "Resyncing client/server counters seems to indicate maintaining cross-process counters. I think that would be way overkill. All we need is a globally unique txn ID since the IDs may be passed to other nodes in the cluster. Using only a UUID would do the trick but memberName and counter are useful for debugging so I\u0027d like to keep those.  \n\nSo we either add an additional UUID field or a timestamp to disambiguate reused counter values across restarts of the same node. Since we already have memberName and counter to provide some uniqueness, I\u0027d rather use a timestamp as stringified UUIDs are very long. I don\u0027t think it really matters if the time drifted backwards but I can use System.nanoTime to alleviate that.",
      "parentUuid": "9a3d3df0_32abc71e",
      "revId": "02f2d6103c0da220e96279ba5fca7c942c97d8d5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_d264094b",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/identifiers/TransactionIdentifier.java",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 649
      },
      "writtenOn": "2016-02-09T17:18:14Z",
      "side": 1,
      "message": "Well, both systems have a node id, so that identifies entities. We need a mechanism by which both parties can signal that they have restarted in a way that lost state, so that the other party can adjust their local state accordingly.\n\nOtherwise this is not resistant to restart+clock going backwards. Nanotime does not help either, as that is even less defined.",
      "parentUuid": "9a3d3df0_95727dab",
      "revId": "02f2d6103c0da220e96279ba5fca7c942c97d8d5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_75e887e2",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/identifiers/TransactionIdentifier.java",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1842
      },
      "writtenOn": "2016-02-09T18:33:28Z",
      "side": 1,
      "message": "I don\u0027t think we need any more mechanisms to communicate state that will make things even more complicated. We just need unique txn IDs to fix this issue so I\u0027ll use a UUID even though it\u0027s rather long.",
      "parentUuid": "9a3d3df0_d264094b",
      "revId": "02f2d6103c0da220e96279ba5fca7c942c97d8d5",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}