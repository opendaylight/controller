{
  "comments": [
    {
      "key": {
        "uuid": "1a9dcd25_c9c34037",
        "filename": "opendaylight/md-sal/sal-common-api/src/main/java/org/opendaylight/controller/md/sal/common/api/data/DataStoreUnavailableException.java",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-18T23:10:56Z",
      "side": 1,
      "message": "I think we should avoid \"shard-speak\" here. How about \"This exception occurs if the datastore is temporarily unavailable and and a retry of the transaction may succeed after a period of time\"",
      "revId": "26a5015af5470a9cec84e7b5fe8a9cc47804ed43",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_4935f044",
        "filename": "opendaylight/md-sal/sal-common-api/src/main/java/org/opendaylight/controller/md/sal/common/api/data/DataStoreUnavailableException.java",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1903
      },
      "writtenOn": "2015-05-18T23:18:47Z",
      "side": 1,
      "message": "So, you think, i should avoid shard field in exception as well?",
      "parentUuid": "1a9dcd25_c9c34037",
      "revId": "26a5015af5470a9cec84e7b5fe8a9cc47804ed43",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_490c1095",
        "filename": "opendaylight/md-sal/sal-common-api/src/main/java/org/opendaylight/controller/md/sal/common/api/data/DataStoreUnavailableException.java",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-18T23:28:54Z",
      "side": 1,
      "message": "Yeah - I commented on that below.",
      "parentUuid": "1a9dcd25_4935f044",
      "revId": "26a5015af5470a9cec84e7b5fe8a9cc47804ed43",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_8960d836",
        "filename": "opendaylight/md-sal/sal-common-api/src/main/java/org/opendaylight/controller/md/sal/common/api/data/DataStoreUnavailableException.java",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-18T23:35:55Z",
      "side": 1,
      "message": "Another reason is it\u0027s in the common.api package so theoretically it could be used by any datastore implementation so keeping CDS-specific concepts out of it keeps this generic.",
      "parentUuid": "1a9dcd25_490c1095",
      "revId": "26a5015af5470a9cec84e7b5fe8a9cc47804ed43",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_c9e4a0ae",
        "filename": "opendaylight/md-sal/sal-common-api/src/main/java/org/opendaylight/controller/md/sal/common/api/data/DataStoreUnavailableException.java",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1903
      },
      "writtenOn": "2015-05-18T23:42:56Z",
      "side": 1,
      "message": "my bad",
      "parentUuid": "1a9dcd25_490c1095",
      "revId": "26a5015af5470a9cec84e7b5fe8a9cc47804ed43",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_21f998c8",
        "filename": "opendaylight/md-sal/sal-common-api/src/main/java/org/opendaylight/controller/md/sal/common/api/data/DataStoreUnavailableException.java",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1903
      },
      "writtenOn": "2015-05-19T18:09:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a9dcd25_c9c34037",
      "revId": "26a5015af5470a9cec84e7b5fe8a9cc47804ed43",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_09ca884f",
        "filename": "opendaylight/md-sal/sal-common-api/src/main/java/org/opendaylight/controller/md/sal/common/api/data/DataStoreUnavailableException.java",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-18T23:10:56Z",
      "side": 1,
      "message": "I think we should derive this from TransactionCommitFailedException. \n\nAlso, I don\u0027t think we should leak shard information here - I don\u0027t see how a client could/would use that information. I think all they need to know is that this is a transient datastore error and re-trying may succeed.",
      "revId": "26a5015af5470a9cec84e7b5fe8a9cc47804ed43",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_81142cf6",
        "filename": "opendaylight/md-sal/sal-common-api/src/main/java/org/opendaylight/controller/md/sal/common/api/data/DataStoreUnavailableException.java",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1903
      },
      "writtenOn": "2015-05-19T18:09:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a9dcd25_09ca884f",
      "revId": "26a5015af5470a9cec84e7b5fe8a9cc47804ed43",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_e9c07c2c",
        "filename": "opendaylight/md-sal/sal-common-api/src/main/java/org/opendaylight/controller/md/sal/common/api/data/DataStoreUnavailableException.java",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-18T23:10:56Z",
      "side": 1,
      "message": "Java docs:  \"Returns the approximate period of time after which a retry may succeed.\"",
      "revId": "26a5015af5470a9cec84e7b5fe8a9cc47804ed43",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_a9e274d3",
        "filename": "opendaylight/md-sal/sal-common-api/src/main/java/org/opendaylight/controller/md/sal/common/api/data/DataStoreUnavailableException.java",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-18T23:10:56Z",
      "side": 1,
      "message": "Can we rename this to \"getApproximateRetryPeriod\"?",
      "revId": "26a5015af5470a9cec84e7b5fe8a9cc47804ed43",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_610fa0e2",
        "filename": "opendaylight/md-sal/sal-common-api/src/main/java/org/opendaylight/controller/md/sal/common/api/data/DataStoreUnavailableException.java",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1903
      },
      "writtenOn": "2015-05-19T18:09:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a9dcd25_a9e274d3",
      "revId": "26a5015af5470a9cec84e7b5fe8a9cc47804ed43",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_8988d823",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/ShardManager.java",
        "patchSetId": 1
      },
      "lineNbr": 469,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-18T23:10:56Z",
      "side": 1,
      "message": "I think we can just set leaderId to null or empty. That\u0027s what happens when the shard changes from follower to candidate. By doing this on UnreachableMember then we\u0027ll find out quicker here then waiting for the heartbeat timeout and the LeaderStateChanged event. Then the rest of logic in findPrimary should fall out the same as when we have no leader.\n\nUsing this approach, we wouldn\u0027t listen for ReachableMember - we just let the LeaderStateChanged event tell us when the leader\u0027s been elected.",
      "revId": "26a5015af5470a9cec84e7b5fe8a9cc47804ed43",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_e9ee3cb4",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/ShardManager.java",
        "patchSetId": 1
      },
      "lineNbr": 469,
      "author": {
        "id": 1903
      },
      "writtenOn": "2015-05-18T23:18:47Z",
      "side": 1,
      "message": "I thought about that, but i have seen under certain load conditions, akka member sometimes send unreachable member event, then immediately it sends reachable. just for some minor glitches, we should not re-trigger election, that is why i added a flag.",
      "parentUuid": "1a9dcd25_8988d823",
      "revId": "26a5015af5470a9cec84e7b5fe8a9cc47804ed43",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_c91fc0b6",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/ShardManager.java",
        "patchSetId": 1
      },
      "lineNbr": 469,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-18T23:28:54Z",
      "side": 1,
      "message": "OK - in that case it seems useful. We could use another field in ShardInformation anyway :)  How about if we check the flag in isShardReadyWithLeaderId? That way the findPrimary and sendResponse code doesn\u0027t change.",
      "parentUuid": "1a9dcd25_e9ee3cb4",
      "revId": "26a5015af5470a9cec84e7b5fe8a9cc47804ed43",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_09db68ee",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/ShardManager.java",
        "patchSetId": 1
      },
      "lineNbr": 469,
      "author": {
        "id": 1903
      },
      "writtenOn": "2015-05-18T23:42:56Z",
      "side": 1,
      "message": "If leader is unavailable, then you want isShardReadyWithLeaderId to throw DatStoreUnavailableException? How else we will find out what is the root cause of Exception?",
      "parentUuid": "1a9dcd25_c91fc0b6",
      "revId": "26a5015af5470a9cec84e7b5fe8a9cc47804ed43",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_fc16f3f0",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/ShardManager.java",
        "patchSetId": 1
      },
      "lineNbr": 469,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-20T02:41:56Z",
      "side": 1,
      "message": "isShardReadyWithLeaderId is checked by findPrimary (actually sendResponse). If the shard doesn\u0027t have a leader  it will schedule retries up to a max timeout. If it still doesn\u0027t have a leader then it sends back NoShardLeaderException. So if we couple isLeaderAvaialble with isShardReadyWithLeaderId then we get all that for free. The leader not available also means no shard leader.\n\nMy thought is to let this code throw NoShardLeaderException  as it currently does. NoShardLeaderException  can be converted to the public DataStoreUnavailableException on the front-end ConcurrentDOMDataBroker (set NoShardLeaderException as the cause). \n\nWe could throw DataStoreUnavailableException here but NoShardLeaderException is also thrown from other places (i.e. Shard) so catching it on the front-end covers all paths.",
      "parentUuid": "1a9dcd25_09db68ee",
      "revId": "26a5015af5470a9cec84e7b5fe8a9cc47804ed43",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_b925d8ac",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/ShardManager.java",
        "patchSetId": 1
      },
      "lineNbr": 469,
      "author": {
        "id": 1903
      },
      "writtenOn": "2015-05-20T17:00:00Z",
      "side": 1,
      "message": "I like the idea of throw noShardLeaderException and Wrap it under DataStoreUnavailableException. So, if isShardReadyWithLeaderId internally schedules retry, then findPrimary could be waiting for a longer time, which we may not want.\n\nDo you think, we should enhance NoShardLeaderException to provide estimated retry time?  Then, if NoShardLeader/DataStoreUnavailableException has retry time, external application can retry after that interval.",
      "parentUuid": "1a9dcd25_fc16f3f0",
      "revId": "26a5015af5470a9cec84e7b5fe8a9cc47804ed43",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_cfc7b611",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/ShardManager.java",
        "patchSetId": 1
      },
      "lineNbr": 469,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-21T07:14:25Z",
      "side": 1,
      "message": "So findPrimary will wait up to 5 min by default so we already give the shard much more than enough time to be ready (both initialized on startup and elected a leader) under normal circumstances. If it hasn\u0027t elected a leader after 5 min then either the other members have been down for a while or the network is borked and we have no idea when the shard will be available again. So we really can\u0027t estimate a retry time. Given that I would say omit the estimated retry time.",
      "parentUuid": "1a9dcd25_b925d8ac",
      "revId": "26a5015af5470a9cec84e7b5fe8a9cc47804ed43",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9dcd25_09a3689f",
        "filename": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/ShardManager.java",
        "patchSetId": 1
      },
      "lineNbr": 569,
      "author": {
        "id": 1842
      },
      "writtenOn": "2015-05-18T23:10:56Z",
      "side": 1,
      "message": "Based on my above comments, we wouldn\u0027t need this code. We can let sendResponse throw the NoShardLeaderException. At the front-end (I think ConcurrentDOMDataBroker would be a good place) we can translate NoShardLeaderException to DataStoreUnavailableException with NoShardLeaderException as the cause.",
      "revId": "26a5015af5470a9cec84e7b5fe8a9cc47804ed43",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}